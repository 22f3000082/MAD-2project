(()=>{[{'revision':null,'url':'/css/108.60c7293f.css'},{'revision':null,'url':'/css/301.f1f8a05e.css'},{'revision':null,'url':'/css/4.870170cb.css'},{'revision':null,'url':'/css/424.4de50627.css'},{'revision':null,'url':'/css/437.895aa03d.css'},{'revision':null,'url':'/css/484.78021f62.css'},{'revision':null,'url':'/css/5.2fd2dbe9.css'},{'revision':null,'url':'/css/51.6565d5ab.css'},{'revision':null,'url':'/css/563.bff41d05.css'},{'revision':null,'url':'/css/895.50828c80.css'},{'revision':null,'url':'/css/898.bc691a98.css'},{'revision':null,'url':'/css/app.25ad391e.css'},{'revision':null,'url':'/css/chunk-vendors.8a42e1de.css'},{'revision':'7cd2e4d77ddd7b00023fdc362afc13d5','url':'/index.html'},{'revision':null,'url':'/js/108.cf0ea27a.js'},{'revision':null,'url':'/js/301.fd672408.js'},{'revision':null,'url':'/js/4.f08fd5a4.js'},{'revision':null,'url':'/js/424.2f153200.js'},{'revision':null,'url':'/js/437.5e895885.js'},{'revision':null,'url':'/js/454.c841a59d.js'},{'revision':null,'url':'/js/474.e1cea947.js'},{'revision':null,'url':'/js/484.19a02286.js'},{'revision':null,'url':'/js/5.11b411d3.js'},{'revision':null,'url':'/js/51.2a0503c5.js'},{'revision':null,'url':'/js/563.bf6bec13.js'},{'revision':null,'url':'/js/642.94d199bd.js'},{'revision':null,'url':'/js/844.5123c378.js'},{'revision':null,'url':'/js/895.aa61e683.js'},{'revision':null,'url':'/js/898.b3c2972c.js'},{'revision':null,'url':'/js/app.31354aa9.js'},{'revision':null,'url':'/js/chunk-vendors.53a4a06f.js'},{'revision':'3965904f8b7f5077e29c4064e49d0588','url':'/manifest.json'}];const e="az-services-v1",t=["/","/index.html","/manifest.json","/favicon.ico","/img/icons/android-chrome-192x192.png","/img/icons/android-chrome-512x512.png"];self.addEventListener("message",(e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()})),self.addEventListener("install",(s=>{s.waitUntil(caches.open(e).then((e=>(console.log("Cache opened"),e.addAll(t)))).then((()=>self.skipWaiting())))})),self.addEventListener("activate",(t=>{const s=[e];t.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(!s.includes(e))return console.log("Deleting old cache:",e),caches.delete(e)}))))).then((()=>self.clients.claim())))})),self.addEventListener("fetch",(t=>{t.request.url.startsWith(self.location.origin)&&(t.request.url.includes("/api/")||t.respondWith(caches.match(t.request).then((s=>s||fetch(t.request).then((s=>{if(!s||200!==s.status||"basic"!==s.type)return s;const n=s.clone();return caches.open(e).then((e=>{e.put(t.request,n)})),s})).catch((()=>{if(t.request.headers.get("accept").includes("text/html"))return caches.match("/index.html")}))))))}))})();