"use strict";(self["webpackChunkhousehold_services"]=self["webpackChunkhousehold_services"]||[]).push([[301],{301:(e,t,r)=>{r.r(t),r.d(t,{default:()=>d});var s=function(){var e=this,t=e._self._c;return t("div",{staticClass:"service-request container"},[t("h2",{staticClass:"mb-4"},[e._v("Available Services")]),e.loading?t("div",{staticClass:"alert alert-info"},[e._v("Loading services...")]):e._e(),e.error?t("div",{staticClass:"alert alert-danger"},[e._v(e._s(e.error))]):e._e(),e.loading||e.error?e._e():t("div",{staticClass:"mb-4"},[t("div",{staticClass:"category-filters"},e._l(e.categories,(function(r){return t("button",{key:r,staticClass:"btn btn-outline-primary me-2 mb-2",class:{active:e.selectedCategory===r},on:{click:function(t){return e.filterByCategory(r)}}},[e._v(" "+e._s(r)+" ")])})),0)]),e.loading||e.error?e._e():t("div",{staticClass:"row"},e._l(e.filteredServices,(function(r){return t("div",{key:r.id,staticClass:"col-md-4 mb-4"},[t("div",{staticClass:"card h-100"},[t("div",{staticClass:"card-body"},[t("h5",{staticClass:"card-title"},[e._v(e._s(r.name))]),t("p",{staticClass:"card-text"},[e._v(e._s(r.description))]),t("div",{staticClass:"service-details"},[t("p",[t("strong",[e._v("Category:")]),e._v(" "+e._s(r.category))]),t("p",[t("strong",[e._v("Price:")]),e._v(" $"+e._s(r.base_price))]),t("p",[t("strong",[e._v("Duration:")]),e._v(" "+e._s(r.time_required)+" hour(s)")])]),t("button",{staticClass:"btn btn-primary",attrs:{disabled:e.loading},on:{click:function(t){return e.createServiceRequest(r)}}},[e._v(" Request Service ")])])])])})),0),t("div",{ref:"requestModal",staticClass:"modal fade",attrs:{id:"requestModal",tabindex:"-1"}},[t("div",{staticClass:"modal-dialog"},[t("div",{staticClass:"modal-content"},[t("div",{staticClass:"modal-header"},[t("h5",{staticClass:"modal-title"},[e._v("Request Service: "+e._s(e.selectedService?.name))]),t("button",{staticClass:"close",attrs:{type:"button","data-dismiss":"modal"}},[e._v("Ã—")])]),t("div",{staticClass:"modal-body"},[t("form",{on:{submit:function(t){return t.preventDefault(),e.submitRequest.apply(null,arguments)}}},[t("div",{staticClass:"form-group"},[t("label",[e._v("Preferred Date")]),t("input",{directives:[{name:"model",rawName:"v-model",value:e.requestForm.preferred_date,expression:"requestForm.preferred_date"}],staticClass:"form-control",attrs:{type:"date",min:e.minDate,required:""},domProps:{value:e.requestForm.preferred_date},on:{input:function(t){t.target.composing||e.$set(e.requestForm,"preferred_date",t.target.value)}}})]),t("div",{staticClass:"form-group"},[t("label",[e._v("Notes")]),t("textarea",{directives:[{name:"model",rawName:"v-model",value:e.requestForm.notes,expression:"requestForm.notes"}],staticClass:"form-control",attrs:{rows:"3"},domProps:{value:e.requestForm.notes},on:{input:function(t){t.target.composing||e.$set(e.requestForm,"notes",t.target.value)}}})]),t("button",{staticClass:"btn btn-primary",attrs:{type:"submit",disabled:e.submitting}},[e._v(" Submit Request ")])])])])])])])},i=[],a=r(844);const o={data(){return{services:[],loading:!0,error:null,selectedService:null,submitting:!1,requestForm:{preferred_date:"",notes:""},selectedCategory:null,categories:["AC Repair","Plumbing","Electrical","Carpentry","Painting","Cleaning","Pest Control","Appliance Repair","Moving Services","Gardening"]}},computed:{minDate(){const e=new Date;return e.toISOString().split("T")[0]},filteredServices(){return this.selectedCategory?this.services.filter((e=>e.category===this.selectedCategory)):this.services}},async created(){await this.fetchServices()},methods:{async fetchServices(){try{this.loading=!0,this.error=null;const e=await a.YR.getPublicServices();this.services=e.filter((e=>e.is_active))}catch(e){console.error("Error fetching services:",e),this.error="Unable to load services. Please try again later."}finally{this.loading=!1}},filterByCategory(e){this.selectedCategory=this.selectedCategory===e?null:e},createServiceRequest(e){const t=localStorage.getItem("token"),s=localStorage.getItem("user");if(!t||!s)return void this.$router.push({path:"/login",query:{redirect:`/service-request/${e.id}`}});const i=JSON.parse(s);if("customer"===i.role)try{this.selectedService=e,this.requestForm={preferred_date:(new Date).toISOString().split("T")[0],notes:""},this.$nextTick((()=>{this.$refs.requestModal?Promise.resolve().then(r.bind(r,292)).then((e=>{const t=new e.Modal(this.$refs.requestModal);t.show()})).catch((t=>{console.error("Error loading bootstrap:",t),this.proceedWithRequest(e)})):this.proceedWithRequest(e)}))}catch(a){console.error("Error preparing request:",a),this.$toast.error(a.message||"Failed to prepare request")}else this.$toast.error("Only customers can request services")},proceedWithRequest(e){try{const t={service_id:e.id,pin_code:prompt("Please enter your PIN code:"),special_instructions:prompt("Any special instructions?")||""};if(!t.pin_code)return void alert("PIN code is required");a.xZ.createRequest(t).then((()=>{this.$toast.success("Service request created successfully!")})).catch((e=>{console.error("Error creating request:",e),this.$toast.error(e.message||"Failed to create request")}))}catch(t){console.error("Error in request dialog:",t),this.$toast.error(t.message||"Failed to process request")}},async submitRequest(){try{this.submitting=!0;const e={service_id:this.selectedService.id,preferred_date:this.requestForm.preferred_date,notes:this.requestForm.notes};await a.xZ.createServiceRequest(e)}catch(e){console.error("Error submitting request:",e),this.$toast.error(e.message||"Failed to submit request")}finally{this.submitting=!1}}}},c=o;var l=r(656),n=(0,l.A)(c,s,i,!1,null,"576a5218",null);const d=n.exports}}]);