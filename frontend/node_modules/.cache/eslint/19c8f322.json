[{"/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/main.js":"1","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/App.vue":"2","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/router/index.js":"3","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/views/ServiceDetails.vue":"4","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/views/ProfessionalDashboard.vue":"5","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/views/ServiceRequest.vue":"6","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/views/HomeView.vue":"7","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/views/LoginView.vue":"8","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/views/RegisterView.vue":"9","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/views/ProfessionalProfile.vue":"10","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/views/AdminDashboard.vue":"11","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/views/CustomerDashboard.vue":"12","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/components/ServiceList.vue":"13","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/components/ServiceSearchPanel.vue":"14","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/components/ServiceCard.vue":"15","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/components/ServiceReviewForm.vue":"16","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/services/api.js":"17"},{"size":851,"mtime":1742922230439,"results":"18","hashOfConfig":"19"},{"size":7123,"mtime":1742993267534,"results":"20","hashOfConfig":"19"},{"size":3172,"mtime":1742760587833,"results":"21","hashOfConfig":"19"},{"size":13529,"mtime":1742577981561,"results":"22","hashOfConfig":"19"},{"size":45344,"mtime":1742914053945,"results":"23","hashOfConfig":"19"},{"size":6645,"mtime":1742814608672,"results":"24","hashOfConfig":"19"},{"size":5384,"mtime":1742851193688,"results":"25","hashOfConfig":"19"},{"size":8252,"mtime":1742850757049,"results":"26","hashOfConfig":"19"},{"size":9759,"mtime":1742825697991,"results":"27","hashOfConfig":"19"},{"size":10921,"mtime":1742894601159,"results":"28","hashOfConfig":"19"},{"size":31481,"mtime":1743013610595,"results":"29","hashOfConfig":"19"},{"size":39320,"mtime":1742936476812,"results":"30","hashOfConfig":"19"},{"size":5415,"mtime":1742914057077,"results":"31","hashOfConfig":"19"},{"size":5543,"mtime":1742763687493,"results":"32","hashOfConfig":"19"},{"size":1722,"mtime":1741161539053,"results":"33","hashOfConfig":"19"},{"size":6067,"mtime":1742921875211,"results":"34","hashOfConfig":"19"},{"size":35722,"mtime":1742921560701,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"brujd5",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/main.js",[],"/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/App.vue",[],"/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/router/index.js",[],"/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/views/ServiceDetails.vue",[],"/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/views/ProfessionalDashboard.vue",[],"/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/views/ServiceRequest.vue",[],"/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/views/HomeView.vue",[],"/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/views/LoginView.vue",[],"/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/views/RegisterView.vue",["73"],"<template>\r\n  <div class=\"register-container\">\r\n    <div class=\"container py-5\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-8 col-lg-6\">\r\n          <div class=\"card shadow\">\r\n            <div class=\"card-body p-4\">\r\n              <h2 class=\"text-center mb-4\">Register</h2>\r\n              <div v-if=\"error\" class=\"alert alert-danger\">{{ error }}</div>\r\n              \r\n              <form @submit.prevent=\"handleSubmit\" class=\"needs-validation\" novalidate>\r\n                <div class=\"mb-3\">\r\n                  <label for=\"fullName\" class=\"form-label\">Full Name</label>\r\n                  <input type=\"text\" id=\"fullName\" name=\"fullName\" class=\"form-control\" v-model=\"formData.name\" required :class=\"{ 'is-invalid': errors.name }\">\r\n                  <div class=\"invalid-feedback\">{{ errors.name }}</div>\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                  <label for=\"username\" class=\"form-label\">Username</label>\r\n                  <input type=\"text\" id=\"username\" name=\"username\" class=\"form-control\" v-model=\"formData.username\" required :class=\"{ 'is-invalid': errors.username }\">\r\n                  <div class=\"invalid-feedback\">{{ errors.username }}</div>\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                  <label for=\"email\" class=\"form-label\">Email</label>\r\n                  <input type=\"email\" id=\"email\" name=\"email\" class=\"form-control\" v-model=\"formData.email\" required :class=\"{ 'is-invalid': errors.email }\">\r\n                  <div class=\"invalid-feedback\">{{ errors.email }}</div>\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                  <label for=\"password\" class=\"form-label\">Password</label>\r\n                  <input type=\"password\" id=\"password\" name=\"password\" class=\"form-control\" v-model=\"formData.password\" required :class=\"{ 'is-invalid': errors.password }\">\r\n                  <div class=\"invalid-feedback\">{{ errors.password }}</div>\r\n                </div>\r\n                \r\n                <div class=\"mb-4\">\r\n                  <label class=\"form-label\">Register as:</label>\r\n                  <div class=\"d-flex gap-4\">\r\n                    <div class=\"form-check\">\r\n                      <input class=\"form-check-input\" type=\"radio\" v-model=\"formData.role\" value=\"customer\" id=\"roleCustomer\">\r\n                      <label class=\"form-check-label\" for=\"roleCustomer\">Customer</label>\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                      <input class=\"form-check-input\" type=\"radio\" v-model=\"formData.role\" value=\"professional\" id=\"roleProfessional\">\r\n                      <label class=\"form-check-label\" for=\"roleProfessional\">Service Professional</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div v-if=\"formData.role === 'professional'\">\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Service Type</label>\r\n                    <select class=\"form-select\" v-model=\"formData.service_type\" required>\r\n                      <option value=\"\">Select a service type</option>\r\n                      <option v-for=\"service in service_types\" :key=\"service\" :value=\"service\">{{ service }}</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Experience (years)</label>\r\n                    <input type=\"number\" class=\"form-control\" v-model=\"formData.experience\" min=\"0\" required>\r\n                  </div>\r\n\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Description</label>\r\n                    <textarea class=\"form-control\" v-model=\"formData.description\" rows=\"3\"></textarea>\r\n                  </div>\r\n\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Upload Documents</label>\r\n                    <input type=\"file\" multiple class=\"form-control\" @change=\"handleFileUpload\">\r\n                  </div>\r\n                </div>\r\n                \r\n                <div v-if=\"formData.role === 'customer'\">\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Phone</label>\r\n                    <input type=\"tel\" class=\"form-control\" v-model=\"formData.phone\" required>\r\n                  </div>\r\n\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Address</label>\r\n                    <textarea class=\"form-control\" v-model=\"formData.address\" required></textarea>\r\n                  </div>\r\n\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">PIN Code</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"formData.pin_code\" required pattern=\"[0-9]{6}\">\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"d-grid gap-2\">\r\n                  <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading\">{{ loading ? 'Registering...' : 'Register' }}</button>\r\n                </div>\r\n                \r\n                <p class=\"text-center mt-3\">\r\n                  Already have an account? <router-link to=\"/login\">Login here</router-link>\r\n                </p>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport router from '@/router';\r\nimport ServiceList from '../components/ServiceList.vue';\r\n\r\nexport default {\r\n  name: 'RegisterView',\r\n  data() {\r\n    return {\r\n      // Define service_types in data section to make it reactive\r\n      service_types: [\r\n        'AC Repair',\r\n        'Plumbing',\r\n        'Electrical',\r\n        'Carpentry',\r\n        'Painting',\r\n        'Cleaning',\r\n        'Pest Control',\r\n        'Appliance Repair',\r\n        'Moving Services',\r\n        'Gardening'\r\n      ]\r\n    };\r\n  },\r\n  setup() {\r\n    const loading = ref(false);\r\n    const error = ref('');\r\n    const services = ref([]);\r\n    \r\n    const formData = reactive({\r\n      name: '', username: '', email: '', password: '', role: '', service_type: '', // Changed from service_types to service_type (singular)\r\n      experience: '', description: '', phone: '', address: '', pin_code: '',\r\n      documents: []\r\n    });\r\n    \r\n    const errors = reactive({});\r\n    \r\n    const fetchServiceTypes = async () => {\r\n    };\r\n    \r\n    const handleFileUpload = (event) => {\r\n      formData.documents = Array.from(event.target.files);\r\n    };\r\n    \r\n    const handleSubmit = async () => {\r\n      try {\r\n        loading.value = true;\r\n        error.value = '';\r\n        \r\n        // Clear previous errors\r\n        Object.keys(errors).forEach(key => errors[key] = '');\r\n        \r\n        // Basic validation\r\n        if (!formData.name) errors.name = 'Name is required';\r\n        if (!formData.username) errors.username = 'Username is required';\r\n        if (!formData.email) errors.email = 'Email is required';\r\n        if (!formData.password) errors.password = 'Password is required';\r\n        if (!formData.role) errors.role = 'Role is required';\r\n        \r\n        // Role-specific validation\r\n        if (formData.role === 'professional') {\r\n          if (!formData.service_type) errors.service_type = 'Service type is required'; // Updated from service_types to service_type\r\n          if (!formData.experience) errors.experience = 'Experience is required';\r\n        } else if (formData.role === 'customer') {\r\n          if (!formData.phone) errors.phone = 'Phone is required';\r\n          if (!formData.address) errors.address = 'Address is required';\r\n          if (!formData.pin_code) errors.pin_code = 'PIN code is required';\r\n        }\r\n        \r\n        // Check if there are any errors\r\n        if (Object.values(errors).some(error => error)) {\r\n          return;\r\n        }\r\n        \r\n        const formDataToSend = new FormData();\r\n        \r\n        // Append all form data\r\n        Object.keys(formData).forEach(key => {\r\n          if (key === 'documents') {\r\n            formData.documents.forEach(file => {\r\n              formDataToSend.append('documents', file);\r\n            });\r\n          } else {\r\n            formDataToSend.append(key, formData[key]);\r\n          }\r\n        });\r\n        \r\n        const response = await axios.post('http://localhost:8080/auth/register', \r\n          formDataToSend,\r\n          {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n              'Accept': 'application/json'\r\n            },\r\n            withCredentials: true\r\n          }\r\n        );\r\n        \r\n        console.log('Registration successful:', response.data);\r\n        \r\n        // Show success message\r\n        error.value = '';\r\n        alert('Registration successful! Please login to continue.');\r\n        \r\n        // Redirect to login page\r\n        router.push('/login');\r\n      } catch (err) {\r\n        console.error('Registration error:', err);\r\n        error.value = err.response?.data?.message || err.response?.data?.error || 'Registration failed. Please try again.';\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    onMounted(fetchServiceTypes);\r\n    \r\n    return { formData, errors, loading, error, services, handleSubmit, handleFileUpload, fetchServiceTypes };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.register-container { background-color: #f8f9fa; min-height: 100vh; padding-top: 2rem; }\r\n.card { border-radius: 15px; box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15); }\r\n.btn-primary { padding: 0.75rem; font-weight: 500; }\r\n.invalid-feedback { font-size: 0.875rem; }\r\n</style>\r\n","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/views/ProfessionalProfile.vue",[],"/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/views/AdminDashboard.vue",["74"],"/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/views/CustomerDashboard.vue",["75"],"<template>\r\n  <div class=\"customer-dashboard\">\r\n    <div class=\"container py-4\">\r\n      <!-- Welcome Section -->\r\n      <div class=\"row mb-4\">\r\n        <div class=\"col-md-8\">\r\n          <h2>Welcome, {{ userName }}!</h2>\r\n          <p class=\"text-muted\">Find services and manage your requests</p>\r\n        </div>\r\n        <div class=\"col-md-4 text-md-end\">\r\n          <button class=\"btn btn-primary\" @click=\"showNewRequestModal = true\">\r\n            <i class=\"fas fa-plus me-2\"></i>New Service Request\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Main Navigation Tabs -->\r\n      <ul class=\"nav nav-pills mb-4\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" :class=\"{ active: activeSection === 'browse' }\" \r\n             @click.prevent=\"activeSection = 'browse'\" href=\"#\">\r\n            <i class=\"fas fa-search me-1\"></i> Browse Services\r\n          </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" :class=\"{ active: activeSection === 'requests' }\" \r\n             @click.prevent=\"activeSection = 'requests'\" href=\"#\">\r\n            <i class=\"fas fa-list-alt me-1\"></i> My Requests\r\n          </a>\r\n        </li>\r\n      </ul>\r\n\r\n      <!-- Browse Services Section -->\r\n      <div v-if=\"activeSection === 'browse'\">\r\n        <div class=\"browse-services-container\">\r\n          <!-- Header with Stats -->\r\n          <div class=\"services-header mb-4\">\r\n            <div class=\"row align-items-center\">\r\n              <div class=\"col-md-6\">\r\n                <h4>Browse Available Services</h4>\r\n                <p class=\"text-muted mb-md-0\">\r\n                  <span v-if=\"!loading\">{{ filteredServices.length }} services available</span>\r\n                  <span v-else>Finding the best services for you...</span>\r\n                </p>\r\n              </div>\r\n              <div class=\"col-md-6 text-md-end\">\r\n                <div class=\"btn-group\">\r\n                  <button class=\"btn btn-outline-primary\" @click=\"refreshServices\">\r\n                    <i class=\"fas fa-sync-alt me-1\"></i> Refresh\r\n                  </button>\r\n                  <button claFss=\"btn btn-outline-secondary\" @click=\"toggleAdvancedSearch\">\r\n                    <i class=\"fas fa-sliders-h me-1\"></i> Filters\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Enhanced Service Search Panel -->\r\n          <ServiceSearchPanel \r\n            :initialParams=\"searchQuery\" \r\n            :categories=\"categories\"\r\n            @search=\"handleSearch\"\r\n            :class=\"{ 'mb-4': true, 'collapsed': !showAdvancedSearch }\"\r\n          />\r\n\r\n          <!-- Popular Categories Quick Filter -->\r\n          <div class=\"category-chips mb-4\">\r\n            <button \r\n              v-for=\"category in popularCategories\" \r\n              :key=\"category\" \r\n              class=\"category-chip\" \r\n              :class=\"{ active: searchQuery.category === category }\"\r\n              @click=\"quickFilterByCategory(category)\"\r\n            >\r\n              <span>{{ category }}</span>\r\n            </button>\r\n            <button class=\"category-chip\" @click=\"clearCategoryFilter\">\r\n              <i class=\"fas fa-times me-1\"></i> Clear\r\n            </button>\r\n          </div>\r\n\r\n          <!-- Error Alert -->\r\n          <div v-if=\"error\" class=\"alert alert-danger mb-4\" role=\"alert\">\r\n            <i class=\"fas fa-exclamation-triangle me-2\"></i>\r\n            {{ error }}\r\n            <button type=\"button\" class=\"btn-close float-end\" @click=\"error = null\"></button>\r\n          </div>\r\n\r\n          <!-- Service List Component -->\r\n          <ServiceList\r\n            :services=\"filteredServices\"\r\n            :loading=\"loading\"\r\n            :hasMore=\"hasMoreServices\"\r\n            @view-details=\"selectService\"\r\n            @request-service=\"directRequestService\"\r\n            @load-more=\"loadMoreServices\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <!-- My Requests Section -->\r\n      <div v-if=\"activeSection === 'requests'\">\r\n        <!-- Service Requests Tabs -->\r\n        <ul class=\"nav nav-tabs mb-4\">\r\n          <li class=\"nav-item\">\r\n            <a \r\n              class=\"nav-link\" \r\n              :class=\"{ active: activeTab === 'active' }\"\r\n              @click.prevent=\"activeTab = 'active'\"\r\n              href=\"#\"\r\n            >\r\n              <i class=\"fas fa-spinner me-1\"></i> Active Requests\r\n              <span v-if=\"getActiveCount() > 0\" class=\"badge rounded-pill bg-primary ms-1\">\r\n                {{ getActiveCount() }}\r\n              </span>\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a \r\n              class=\"nav-link\" \r\n              :class=\"{ active: activeTab === 'completed' }\"\r\n              @click.prevent=\"activeTab = 'completed'\"\r\n              href=\"#\"\r\n            >\r\n              <i class=\"fas fa-check-circle me-1\"></i> Service History\r\n              <span v-if=\"getCompletedCount() > 0\" class=\"badge rounded-pill bg-success ms-1\">\r\n                {{ getCompletedCount() }}\r\n              </span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n\r\n        <!-- Service Requests List -->\r\n        <div v-if=\"loading\" class=\"text-center py-5\">\r\n          <div class=\"spinner-border text-primary\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n          <p class=\"mt-2\">Loading your requests...</p>\r\n        </div>\r\n        \r\n        <div v-else-if=\"filteredRequests.length === 0\" class=\"text-center py-5\">\r\n          <i class=\"fas fa-inbox fa-3x text-muted mb-3\"></i>\r\n          <h5>No service requests found</h5>\r\n          <p class=\"text-muted\">\r\n            {{ activeTab === 'active' ? 'Create a new request to get started!' : 'No completed requests yet.' }}\r\n          </p>\r\n          <button v-if=\"activeTab === 'active'\" class=\"btn btn-primary mt-2\" @click=\"showNewRequestModal = true\">\r\n            <i class=\"fas fa-plus me-2\"></i>Create Service Request\r\n          </button>\r\n        </div>\r\n        \r\n        <div v-else class=\"row g-4\">\r\n          <div v-for=\"request in filteredRequests\" :key=\"request.id\" class=\"col-md-6\">\r\n            <div class=\"card h-100 shadow-sm\" :class=\"{'border-warning': request.status === 'pending', \r\n                                                     'border-primary': request.status === 'in_progress',\r\n                                                     'border-success': request.status === 'completed'}\">\r\n              <div class=\"card-header bg-transparent d-flex justify-content-between align-items-center\">\r\n                <span :class=\"getStatusBadgeClass(request.status)\">\r\n                  {{ request.status }}\r\n                </span>\r\n                <small class=\"text-muted\">\r\n                  <i class=\"fas fa-calendar me-1\"></i> {{ formatDate(request.created_at, true) }}\r\n                </small>\r\n              </div>\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title mb-3\">{{ request.service.name }}</h5>\r\n                \r\n                <div class=\"d-flex mb-3\">\r\n                  <div class=\"me-3\">\r\n                    <i class=\"fas fa-map-marker-alt text-muted me-1\"></i> {{ request.pin_code }}\r\n                  </div>\r\n                  <div v-if=\"request.final_amount\">\r\n                    <i class=\"fas fa-money-bill-wave text-success me-1\"></i> ₹{{ request.final_amount }}\r\n                  </div>\r\n                </div>\r\n\r\n                <div v-if=\"request.professional\" class=\"mb-3 p-2 bg-light rounded\">\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <i class=\"fas fa-user-tie text-primary me-2 fa-lg\"></i>\r\n                    <div>\r\n                      <strong>{{ request.professional.professional_name }}</strong>\r\n                      <p class=\"text-muted mb-0 small\">{{ request.professional.service_type }}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <p v-if=\"request.special_instructions\" class=\"card-text text-truncate mb-3\" \r\n                   :title=\"request.special_instructions\">\r\n                  {{ request.special_instructions }}\r\n                </p>\r\n\r\n                <!-- Status update indicators -->\r\n                <div class=\"mb-3 service-progress\">\r\n                  <div class=\"status-track d-flex justify-content-between\">\r\n                    <div class=\"status-point\" :class=\"{'active': true}\">\r\n                      <i class=\"fas fa-plus-circle\"></i>\r\n                      <span>Created</span>\r\n                    </div>\r\n                    <div class=\"status-point\" :class=\"{'active': ['in_progress', 'completed', 'closed'].includes(request.status)}\">\r\n                      <i class=\"fas fa-tools\"></i>\r\n                      <span>In Progress</span>\r\n                    </div>\r\n                    <div class=\"status-point\" :class=\"{'active': ['completed', 'closed'].includes(request.status)}\">\r\n                      <i class=\"fas fa-check-circle\"></i>\r\n                      <span>Completed</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Action Buttons -->\r\n                <div class=\"d-flex justify-content-end gap-2 mt-3\">\r\n                  <button\r\n                    v-if=\"request.status === 'pending' || request.status === 'assigned'\"\r\n                    class=\"btn btn-outline-danger btn-sm\"\r\n                    @click=\"closeRequest(request)\"\r\n                  >\r\n                    <i class=\"fas fa-times me-1\"></i>\r\n                    Close\r\n                  </button>\r\n                  <button\r\n                    v-if=\"request.status === 'pending'\"\r\n                    class=\"btn btn-outline-primary btn-sm\"\r\n                    @click=\"editRequest(request)\"\r\n                  >\r\n                    <i class=\"fas fa-edit me-1\"></i>\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    v-if=\"request.status === 'completed' && !request.has_review\"\r\n                    class=\"btn btn-outline-success btn-sm\"\r\n                    @click=\"addReview(request)\"\r\n                  >\r\n                    <i class=\"fas fa-star me-1\"></i>\r\n                    Review\r\n                  </button>\r\n                  <button\r\n                    class=\"btn btn-outline-secondary btn-sm\"\r\n                    @click=\"viewRequestDetails(request)\"\r\n                  >\r\n                    <i class=\"fas fa-eye me-1\"></i>\r\n                    Details\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Service Details Modal -->\r\n    <div class=\"modal fade\" :class=\"{ show: showServiceModal }\" v-if=\"showServiceModal\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Service Details</h5>\r\n            <button type=\"button\" class=\"btn-close\" @click=\"showServiceModal = false\"></button>\r\n          </div>\r\n          <div class=\"modal-body\" v-if=\"selectedService\">\r\n            <div class=\"service-details\">\r\n              <h4>{{ selectedService.name }}</h4>\r\n              <div class=\"d-flex justify-content-between mb-3\">\r\n                <span class=\"badge bg-primary fs-5\">₹{{ selectedService.base_price }}</span>\r\n                <span class=\"text-muted\"><i class=\"far fa-clock me-2\"></i>{{ selectedService.time_required }} minutes</span>\r\n              </div>\r\n              <p>{{ selectedService.description }}</p>\r\n              <div class=\"mb-3\">\r\n                <strong>Category:</strong> {{ selectedService.category }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"showServiceModal = false\">Close</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"requestSelectedService\">\r\n              <i class=\"fas fa-plus me-1\"></i> Request Service\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- New Service Request Modal -->\r\n    <div class=\"modal fade\" :class=\"{ show: showNewRequestModal }\" v-if=\"showNewRequestModal\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">New Service Request</h5>\r\n            <button type=\"button\" class=\"btn-close\" @click=\"showNewRequestModal = false\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <form @submit.prevent=\"createRequest\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"serviceCategory\" class=\"form-label\">Service Category</label>\r\n                <select id=\"serviceCategory\" name=\"serviceCategory\" class=\"form-select\" v-model=\"newRequest.category\">\r\n                  <option value=\"\">Select Category</option>\r\n                  <option v-for=\"category in categories\" :key=\"category\" :value=\"category\">\r\n                    {{ category }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"pinCode\" class=\"form-label\">PIN Code</label>\r\n                <input \r\n                  id=\"pinCode\"\r\n                  name=\"pinCode\"\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  v-model=\"newRequest.pin_code\"\r\n                  required\r\n                  pattern=\"[0-9]{6}\"\r\n                  placeholder=\"Enter 6-digit PIN code\"\r\n                >\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"specialInstructions\" class=\"form-label\">Special Instructions</label>\r\n                <textarea\r\n                  id=\"specialInstructions\"\r\n                  name=\"specialInstructions\"\r\n                  class=\"form-control\"\r\n                  v-model=\"newRequest.special_instructions\"\r\n                  rows=\"3\"\r\n                  placeholder=\"Any specific requirements or details...\"\r\n                ></textarea>\r\n              </div>\r\n              <div class=\"text-end\">\r\n                <button type=\"button\" class=\"btn btn-secondary me-2\" @click=\"showNewRequestModal = false\">\r\n                  Cancel\r\n                </button>\r\n                <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"isLoading\">\r\n                  <span v-if=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\"></span>\r\n                  Create Request\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Enhanced Review Modal -->\r\n    <div class=\"modal fade\" :class=\"{ show: showReviewModal }\" v-if=\"showReviewModal\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <ServiceReviewForm\r\n            :requestId=\"selectedRequest?.id\"\r\n            :serviceName=\"selectedRequest?.service?.name\"\r\n            :serviceDate=\"selectedRequest?.completed_at\"\r\n            :professionalName=\"selectedRequest?.professional?.professional_name\"\r\n            @close=\"showReviewModal = false\"\r\n            @submitted=\"handleReviewSubmitted\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Enhanced Request Details Modal -->\r\n    <div class=\"modal fade\" :class=\"{ show: showRequestDetailsModal }\" v-if=\"showRequestDetailsModal\">\r\n      <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Request Details</h5>\r\n            <button type=\"button\" class=\"btn-close\" @click=\"showRequestDetailsModal = false\"></button>\r\n          </div>\r\n          <div class=\"modal-body\" v-if=\"selectedRequest\">\r\n            <div class=\"row mb-4\">\r\n              <div class=\"col-md-6\">\r\n                <h5>{{ selectedRequest.service?.name }}</h5>\r\n                <div :class=\"getStatusBadgeClass(selectedRequest.status)\" class=\"mb-2 badge-lg\">\r\n                  {{ selectedRequest.status }}\r\n                </div>\r\n                <p class=\"text-muted\">\r\n                  <i class=\"fas fa-map-marker-alt me-2\"></i>\r\n                  PIN Code: {{ selectedRequest.pin_code }}\r\n                </p>\r\n                <p v-if=\"selectedRequest.final_amount\" class=\"badge bg-success\">\r\n                  Final Amount: ₹{{ selectedRequest.final_amount }}\r\n                </p>\r\n              </div>\r\n              <div class=\"col-md-6 text-md-end\">\r\n                <p class=\"mb-1\"><strong>Requested:</strong> {{ formatDate(selectedRequest.created_at) }}</p>\r\n                <p v-if=\"selectedRequest.accepted_at\" class=\"mb-1\">\r\n                  <strong>Accepted:</strong> {{ formatDate(selectedRequest.accepted_at) }}\r\n                </p>\r\n                <p v-if=\"selectedRequest.completed_at\" class=\"mb-1\">\r\n                  <strong>Completed:</strong> {{ formatDate(selectedRequest.completed_at) }}\r\n                </p>\r\n                <p v-if=\"selectedRequest.closed_at\" class=\"mb-1\">\r\n                  <strong>Closed:</strong> {{ formatDate(selectedRequest.closed_at) }}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <!-- Service Request Timeline -->\r\n            <div class=\"service-timeline mb-4\">\r\n              <h6>Service Timeline</h6>\r\n              <div class=\"timeline\">\r\n                <div class=\"timeline-item\">\r\n                  <div class=\"timeline-marker bg-success\"></div>\r\n                  <div class=\"timeline-content\">\r\n                    <p class=\"mb-0\"><strong>Request Created</strong></p>\r\n                    <p class=\"text-muted small mb-0\">{{ formatDate(selectedRequest.created_at) }}</p>\r\n                  </div>\r\n                </div>\r\n                <div v-if=\"selectedRequest.accepted_at\" class=\"timeline-item\">\r\n                  <div class=\"timeline-marker bg-primary\"></div>\r\n                  <div class=\"timeline-content\">\r\n                    <p class=\"mb-0\"><strong>Professional Assigned</strong></p>\r\n                    <p class=\"text-muted small mb-0\">{{ formatDate(selectedRequest.accepted_at) }}</p>\r\n                    <p v-if=\"selectedRequest.professional\" class=\"small mb-0\">\r\n                      {{ selectedRequest.professional.professional_name }} was assigned to your request\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div v-if=\"selectedRequest.completed_at\" class=\"timeline-item\">\r\n                  <div class=\"timeline-marker bg-info\"></div>\r\n                  <div class=\"timeline-content\">\r\n                    <p class=\"mb-0\"><strong>Service Completed</strong></p>\r\n                    <p class=\"text-muted small mb-0\">{{ formatDate(selectedRequest.completed_at) }}</p>\r\n                    <p v-if=\"selectedRequest.final_amount\" class=\"small mb-0\">\r\n                      Service completed with final amount: ₹{{ selectedRequest.final_amount }}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div v-if=\"selectedRequest.closed_at\" class=\"timeline-item\">\r\n                  <div class=\"timeline-marker bg-secondary\"></div>\r\n                  <div class=\"timeline-content\">\r\n                    <p class=\"mb-0\"><strong>Request Closed</strong></p>\r\n                    <p class=\"text-muted small mb-0\">{{ formatDate(selectedRequest.closed_at) }}</p>\r\n                  </div>\r\n                </div>\r\n                <div v-if=\"selectedRequest.has_review\" class=\"timeline-item\">\r\n                  <div class=\"timeline-marker bg-warning\"></div>\r\n                  <div class=\"timeline-content\">\r\n                    <p class=\"mb-0\"><strong>Review Submitted</strong></p>\r\n                    <div v-if=\"selectedRequest.review\" class=\"mt-1\">\r\n                      <div class=\"star-rating small\">\r\n                        <i v-for=\"n in 5\" :key=\"n\" \r\n                          class=\"fas fa-star\" \r\n                          :class=\"n <= selectedRequest.review.rating ? 'text-warning' : 'text-muted'\"></i>\r\n                      </div>\r\n                      <p class=\"small mt-1 mb-0\">{{ selectedRequest.review.remarks }}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Special Instructions -->\r\n            <div class=\"mb-4\">\r\n              <h6>Special Instructions</h6>\r\n              <p class=\"p-3 bg-light rounded\">{{ selectedRequest.special_instructions || 'No special instructions provided.' }}</p>\r\n            </div>\r\n            <!-- Professional Details -->\r\n            <div v-if=\"selectedRequest.professional\" class=\"mb-4\">\r\n              <h6>Professional Details</h6>\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">{{ selectedRequest.professional.professional_name }}</h5>\r\n                  <p class=\"text-muted mb-1\">\r\n                    <strong>Service Type:</strong> {{ selectedRequest.professional.service_type }}\r\n                  </p>\r\n                  <p class=\"text-muted mb-0\">\r\n                    <strong>Experience:</strong> {{ selectedRequest.professional.experience }} years\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Action Buttons -->\r\n            <div class=\"d-flex justify-content-end gap-2 mt-4\">\r\n              <button \r\n                v-if=\"selectedRequest.status === 'pending' || selectedRequest.status === 'assigned'\"\r\n                class=\"btn btn-danger\" \r\n                @click=\"closeRequest(selectedRequest, true)\">\r\n                <i class=\"fas fa-times me-1\"></i> Cancel Request\r\n              </button>\r\n              <button \r\n                v-if=\"selectedRequest.status === 'completed' && !selectedRequest.has_review\"\r\n                class=\"btn btn-warning\" \r\n                @click=\"addReview(selectedRequest)\">\r\n                <i class=\"fas fa-star me-1\"></i> Review Service\r\n              </button>\r\n              <button \r\n                class=\"btn btn-secondary\" \r\n                @click=\"showRequestDetailsModal = false\">\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { serviceAPI, customerAPI } from '@/services/api';\r\nimport ServiceSearchPanel from '@/components/ServiceSearchPanel.vue';\r\nimport ServiceList from '@/components/ServiceList.vue';\r\nimport ServiceReviewForm from '@/components/ServiceReviewForm.vue';\r\n\r\nexport default {\r\n  name: 'CustomerDashboard',\r\n  components: {\r\n    ServiceSearchPanel,\r\n    ServiceList,\r\n    ServiceReviewForm\r\n  },\r\n\r\n  data() {\r\n    const user = JSON.parse(localStorage.getItem('user')) || {};\r\n    return {\r\n      userName: user.name || user.username || 'Customer',\r\n      activeSection: 'browse',\r\n      activeTab: 'active',\r\n      showServiceModal: false,\r\n      showNewRequestModal: false,\r\n      showReviewModal: false,\r\n      showRequestDetailsModal: false,\r\n      selectedService: null,\r\n      selectedRequest: null,\r\n      searchQuery: {\r\n        name: '',\r\n        category: '',\r\n        pinCode: ''\r\n      },\r\n      services: [],\r\n      categories: [\r\n        'AC Repair',\r\n        'Plumbing',\r\n        'Electrical',\r\n        'Carpentry',\r\n        'Painting',\r\n        'Cleaning',\r\n        'Pest Control',\r\n        'Appliance Repair',\r\n        'Moving Services',\r\n        'Gardening'\r\n      ],\r\n      serviceRequests: [],\r\n      loading: false,\r\n      error: null,\r\n      newRequest: {\r\n        service_id: '',\r\n        pin_code: '',\r\n        special_instructions: '',\r\n        category: ''\r\n      },\r\n      isLoading: false,\r\n      page: 1,\r\n      hasMoreServices: true,\r\n      showAdvancedSearch: false\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    filteredRequests() {\r\n      return this.serviceRequests.filter(request => {\r\n        if (this.activeTab === 'active') {\r\n          return ['pending', 'assigned', 'in_progress'].includes(request.status)\r\n        } else {\r\n          return ['completed', 'closed'].includes(request.status)\r\n        }\r\n      })\r\n    },\r\n    filteredServices() {\r\n      if (!this.services.length) return [];\r\n      return this.services.filter(service => {\r\n        // Filter by name\r\n        if (this.searchQuery.name && !service.name.toLowerCase().includes(this.searchQuery.name.toLowerCase())) {\r\n          return false;\r\n        }\r\n        \r\n        // Filter by category\r\n        if (this.searchQuery.category && service.category !== this.searchQuery.category) {\r\n          return false;\r\n        }\r\n\r\n        // Filter by PIN code if implemented\r\n        if (this.searchQuery.pinCode && service.available_pin_codes) {\r\n          if (!service.available_pin_codes.includes(this.searchQuery.pinCode)) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      });\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    async fetchServices() {\r\n      try {\r\n        this.loading = true;\r\n        this.error = null;\r\n        const response = await serviceAPI.getPublicServices();\r\n        this.services = response || [];\r\n      } catch (error) {\r\n        console.error('Error fetching services:', error);\r\n        this.error = 'Failed to load services. Please try again.';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    async fetchServiceTypes() {\r\n      try {\r\n        this.loading = true;\r\n        console.log('Fetching service categories from database...');\r\n        const response = await serviceAPI.getServiceTypes();\r\n        if (response && Array.isArray(response) && response.length > 0) {\r\n          this.categories = response;\r\n          console.log(`Received ${this.categories.length} service categories`);\r\n        } else {\r\n          console.warn('No service categories returned from API, using defaults');\r\n          // Fallback to defaults if API returns empty array\r\n          this.categories = [\r\n            'AC Repair', 'Plumbing', 'Electrical', 'Carpentry', 'Painting',\r\n            'Cleaning', 'Pest Control', 'Appliance Repair', 'Moving Services', 'Gardening'\r\n          ];\r\n        }\r\n        this.loading = false;\r\n      } catch (error) {\r\n        console.error('Error fetching service categories:', error);\r\n        // Fallback to defaults on error\r\n        this.categories = [\r\n          'AC Repair', 'Plumbing', 'Electrical', 'Carpentry', 'Painting',\r\n          'Cleaning', 'Pest Control', 'Appliance Repair', 'Moving Services', 'Gardening'\r\n        ];\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    async fetchRequests() {\r\n      try {\r\n        this.loading = true;\r\n        console.log('Fetching customer requests...');\r\n        const response = await customerAPI.getRequests();\r\n        if (!response || !Array.isArray(response)) {\r\n          console.warn('Invalid response format for customer requests:', response);\r\n          this.serviceRequests = [];\r\n        } else {\r\n          console.log(`Retrieved ${response.length} requests for customer`);\r\n          this.serviceRequests = response;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching requests:', error);\r\n        this.error = 'Failed to load service requests. Please try again.';\r\n        this.serviceRequests = []; // Fallback to empty array\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    async refreshServices() {\r\n      try {\r\n        this.loading = true;\r\n        this.error = null;\r\n        await this.fetchServices();\r\n        // Reset some search parameters but keep category if selected\r\n        const category = this.searchQuery.category;\r\n        this.searchQuery = { name: '', category, pinCode: '' };\r\n      } catch (error) {\r\n        console.error('Error refreshing services:', error);\r\n        this.error = 'Failed to refresh services. Please try again.';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    toggleAdvancedSearch() {\r\n      this.showAdvancedSearch = !this.showAdvancedSearch;\r\n    },\r\n\r\n    quickFilterByCategory(category) {\r\n      if (this.searchQuery.category === category) {\r\n        // If clicking the already selected category, clear it\r\n        this.searchQuery.category = '';\r\n      } else {\r\n        this.searchQuery.category = category;\r\n      }\r\n      this.handleSearch(this.searchQuery);\r\n    },\r\n\r\n    clearCategoryFilter() {\r\n      this.searchQuery.category = '';\r\n      this.handleSearch(this.searchQuery);\r\n    },\r\n\r\n    async loadMoreServices() {\r\n      if (this.loading || !this.hasMoreServices) return;\r\n      \r\n      try {\r\n        this.loading = true;\r\n        this.page += 1;\r\n        \r\n        // Call API with pagination parameters\r\n        const moreServices = await serviceAPI.getServices({\r\n          page: this.page,\r\n          ...this.searchQuery\r\n        });\r\n        if (moreServices && moreServices.length) {\r\n          this.services = [...this.services, ...moreServices];\r\n          // Check if we've reached the end\r\n          this.hasMoreServices = moreServices.length >= 10; // Assuming 10 per page\r\n        } else {\r\n          this.hasMoreServices = false;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading more services:', error);\r\n        this.error = 'Failed to load more services.';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    async createRequest() {\r\n      this.isLoading = true;\r\n      try {\r\n        // Validate that we have either service_id or category\r\n        if (!this.newRequest.service_id && !this.newRequest.category) {\r\n          throw new Error(\"Please select a service category\");\r\n        }\r\n        \r\n        // Ensure pin_code is valid\r\n        if (!this.newRequest.pin_code || !/^\\d{6}$/.test(this.newRequest.pin_code)) {\r\n          throw new Error(\"Please enter a valid 6-digit PIN code\");\r\n        }\r\n        \r\n        console.log('Submitting request with data:', this.newRequest);\r\n        \r\n        try {\r\n          const response = await customerAPI.createRequest(this.newRequest);\r\n          this.showNewRequestModal = false;\r\n          this.newRequest = { service_id: '', pin_code: '', special_instructions: '', category: '' };\r\n          this.activeSection = 'requests'; // Switch to requests tab\r\n          await this.fetchRequests();\r\n          alert('Service request created successfully!');\r\n        } catch (apiError) {\r\n          // Show more friendly error message with details from the backend\r\n          if (apiError.message.includes('No service found in category')) {\r\n            throw new Error(`We currently don't have service professionals for ${this.newRequest.category}. Please try a different category.`);\r\n          } else {\r\n            throw apiError;\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error creating request:', error);\r\n        alert('Failed to create service request: ' + (error.message || 'Unknown error'));\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    async closeRequest(request, fromModal = false) {\r\n      if (confirm('Are you sure you want to cancel this request?')) {\r\n        try {\r\n          this.isLoading = true;\r\n          await customerAPI.closeRequest(request.id);\r\n          await this.fetchRequests();\r\n          if (fromModal) {\r\n            this.showRequestDetailsModal = false;\r\n          }\r\n          alert('Request cancelled successfully.');\r\n        } catch (error) {\r\n          console.error('Error closing request:', error);\r\n          alert('Failed to cancel request: ' + (error.message || 'Unknown error'));\r\n        } finally {\r\n          this.isLoading = false;\r\n        }\r\n      }\r\n    },\r\n\r\n    editRequest(request) {\r\n      // Implement edit functionality (e.g., populate form with current values)\r\n      this.newRequest = {\r\n        service_id: request.service_id,\r\n        pin_code: request.pin_code,\r\n        special_instructions: request.special_instructions || '',\r\n        category: request.category || ''\r\n      };\r\n      this.showNewRequestModal = true;\r\n    },\r\n\r\n    addReview(request) {\r\n      this.selectedRequest = request;\r\n      this.review = { rating: 0, remarks: '' };\r\n      this.showReviewModal = true;\r\n    },\r\n\r\n    async submitReview() {\r\n      try {\r\n        this.isLoading = true;\r\n        await customerAPI.addReview(this.selectedRequest.id, this.review);\r\n        this.showReviewModal = false;\r\n        this.review = { rating: 0, remarks: '' };\r\n        await this.fetchRequests();\r\n        alert('Review submitted successfully.');\r\n      } catch (error) {\r\n        console.error('Error submitting review:', error);\r\n        alert('Failed to submit review: ' + (error.message || 'Unknown error'));\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    selectService(service) {\r\n      this.selectedService = service;\r\n      this.showServiceModal = true;\r\n    },\r\n\r\n    requestSelectedService() {\r\n      this.newRequest.service_id = this.selectedService.id;\r\n      this.showServiceModal = false;\r\n      this.showNewRequestModal = true;\r\n    },\r\n\r\n    viewRequestDetails(request) {\r\n      this.selectedRequest = request;\r\n      this.showRequestDetailsModal = true;\r\n    },\r\n\r\n    formatDate(dateString, short = false) {\r\n      if (!dateString) return 'N/A';\r\n      const date = new Date(dateString);\r\n      if (short) {\r\n        return date.toLocaleDateString('en-US', {\r\n          month: 'short',\r\n          day: 'numeric'\r\n        });\r\n      }\r\n      return date.toLocaleString('en-US', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      });\r\n    },\r\n\r\n    getStatusBadgeClass(status) {\r\n      const classes = {\r\n        pending: 'badge bg-warning',\r\n        assigned: 'badge bg-info',\r\n        in_progress: 'badge bg-primary',\r\n        completed: 'badge bg-success',\r\n        closed: 'badge bg-secondary',\r\n        cancelled: 'badge bg-danger'\r\n      };\r\n      return classes[status] || 'badge bg-secondary';\r\n    },\r\n\r\n    handleSearch(params) {\r\n      this.searchQuery = { ...params };\r\n      this.page = 1;\r\n      this.fetchServices();\r\n    },\r\n\r\n    directRequestService(service) {\r\n      this.selectedService = service;\r\n      this.showNewRequestModal = true;\r\n      // Pre-populate the request form with the selected service\r\n      this.newRequest.service_id = service.id;\r\n    },\r\n\r\n    handleReviewSubmitted() {\r\n      this.showReviewModal = false;\r\n      alert('Thank you for your review!');\r\n      this.fetchRequests();\r\n    },\r\n\r\n    getActiveCount() {\r\n      return this.serviceRequests.filter(request => \r\n        ['pending', 'assigned', 'in_progress'].includes(request.status)\r\n      ).length;\r\n    },\r\n\r\n    getCompletedCount() {\r\n      return this.serviceRequests.filter(request => \r\n        ['completed', 'closed'].includes(request.status)\r\n      ).length;\r\n    },\r\n\r\n    async createServiceRequest(serviceId) {\r\n      try {\r\n        if (!this.newRequest.pin_code || !/^\\d{6}$/.test(this.newRequest.pin_code)) {\r\n          throw new Error('Please enter a valid 6-digit PIN code');\r\n        }\r\n\r\n        this.isLoading = true;\r\n        await customerAPI.createRequest({\r\n          service_id: serviceId,\r\n          pin_code: this.newRequest.pin_code,\r\n          special_instructions: this.newRequest.special_instructions\r\n        });\r\n\r\n        this.showNewRequestModal = false;\r\n        this.fetchRequests();\r\n        this.$toast.success('Service request created successfully');\r\n      } catch (error) {\r\n        console.error('Error creating request:', error);\r\n        this.$toast.error(error.message || 'Failed to create request');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    try {\r\n      console.log('CustomerDashboard created, loading data...');\r\n      await Promise.all([\r\n        this.fetchServices(),\r\n        this.fetchServiceTypes(),\r\n        this.fetchRequests()\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error initializing dashboard:', error);\r\n      this.error = 'Failed to load dashboard data. Please refresh the page.';\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.customer-dashboard {\r\n  background-color: #f8f9fa;\r\n  min-height: 100vh;\r\n}\r\n\r\n.service-card {\r\n  transition: transform 0.2s, box-shadow 0.2s;\r\n}\r\n\r\n.service-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.nav-pills .nav-link,\r\n.nav-tabs .nav-link {\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.modal.show {\r\n  display: block;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.star-rating {\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n\r\n.star-rating i {\r\n  cursor: pointer;\r\n  color: #e0e0e0;\r\n}\r\n\r\n.star-rating i.active {\r\n  color: #ffc107;\r\n}\r\n\r\n/* Enhanced timeline and status styles */\r\n.badge-lg {\r\n  font-size: 1rem;\r\n  padding: 0.5rem 0.75rem;\r\n}\r\n\r\n.service-progress {\r\n  position: relative;\r\n  margin: 15px 0;\r\n}\r\n\r\n.status-track {\r\n  position: relative;\r\n  height: 40px;\r\n}\r\n\r\n.status-track:before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  right: 10px;\r\n  height: 2px;\r\n  background-color: #e9ecef;\r\n  z-index: 1;\r\n}\r\n\r\n.status-point {\r\n  position: relative;\r\n  z-index: 2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: #adb5bd;\r\n}\r\n\r\n.status-point i {\r\n  background-color: white;\r\n  border-radius: 50%;\r\n  padding: 5px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.status-point span {\r\n  font-size: 0.65rem;\r\n  margin-top: 4px;\r\n}\r\n\r\n.status-point.active {\r\n  color: #0d6efd;\r\n}\r\n\r\n.status-point.active i {\r\n  color: #0d6efd;\r\n}\r\n\r\n.timeline {\r\n  position: relative;\r\n  padding-left: 40px;\r\n}\r\n\r\n.timeline-item {\r\n  position: relative;\r\n  padding-bottom: 25px;\r\n}\r\n\r\n.timeline-marker {\r\n  position: absolute;\r\n  left: -20px;\r\n  top: 0;\r\n  width: 16px;\r\n  height: 16px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.timeline:before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: -12px;\r\n  width: 2px;\r\n  background-color: #e9ecef;\r\n}\r\n\r\n.timeline-content {\r\n  background-color: #f8f9fa;\r\n  padding: 10px 15px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.card-header .badge {\r\n  font-size: 0.85rem;\r\n  padding: 0.35rem 0.65rem;\r\n}\r\n\r\n/* Browse Services Section Styles */\r\n.browse-services-container {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.services-header {\r\n  background-color: #ffffff;\r\n  border-radius: 10px;\r\n  padding: 1.25rem;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.category-chips {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n\r\n.category-chip {\r\n  background-color: #f8f9fa;\r\n  border: 1px solid #e9ecef;\r\n  color: #495057;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 50px;\r\n  font-size: 0.9rem;\r\n  transition: all 0.2s;\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  box-shadow: none;\r\n  outline: none;\r\n}\r\n\r\n.category-chip:hover {\r\n  background-color: #e9ecef;\r\n  color: #212529;\r\n}\r\n\r\n.category-chip.active {\r\n  background-color: #0d6efd;\r\n  color: white;\r\n  border-color: #0d6efd;\r\n}\r\n\r\n/* Animation for collapsing search panel */\r\n.collapsed {\r\n  max-height: 0;\r\n  overflow: hidden;\r\n  transition: max-height 0.3s ease-out;\r\n}\r\n</style>","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/components/ServiceList.vue",[],"/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/components/ServiceSearchPanel.vue",["76","77"],"<template>\r\n  <div class=\"service-search-panel\">\r\n    <div class=\"card shadow-sm mb-4\">\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title mb-3\">Find Services</h5>\r\n        <div class=\"row g-3\">\r\n          <div class=\"col-md-4\">\r\n            <div class=\"input-group\">\r\n              <span class=\"input-group-text\">\r\n                <i class=\"fas fa-search\"></i>\r\n              </span>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                v-model=\"searchParams.name\"\r\n                placeholder=\"Service name...\"\r\n                @input=\"emitSearch\"\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"input-group\">\r\n              <span class=\"input-group-text\">\r\n                <i class=\"fas fa-map-marker-alt\"></i>\r\n              </span>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                v-model=\"searchParams.pinCode\"\r\n                placeholder=\"PIN code...\"\r\n                @input=\"emitSearch\"\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <select class=\"form-select\" v-model=\"searchParams.category\" @change=\"emitSearch\">\r\n              <option value=\"\">All Categories</option>\r\n              <option v-for=\"category in categories\" :key=\"category\" :value=\"category\">\r\n                {{ category }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"mt-3\">\r\n          <div class=\"accordion\" id=\"accordionFilters\">\r\n            <div class=\"accordion-item border-0\">\r\n              <h2 class=\"accordion-header\" id=\"headingAdvanced\">\r\n                <button class=\"accordion-button collapsed p-0 bg-transparent shadow-none\" type=\"button\" \r\n                        data-bs-toggle=\"collapse\" data-bs-target=\"#collapseAdvanced\" \r\n                        aria-expanded=\"false\" aria-controls=\"collapseAdvanced\">\r\n                  <small>Advanced Filters</small>\r\n                </button>\r\n              </h2>\r\n              <div id=\"collapseAdvanced\" class=\"accordion-collapse collapse\" \r\n                   aria-labelledby=\"headingAdvanced\" data-bs-parent=\"#accordionFilters\">\r\n                <div class=\"accordion-body px-0 pt-3\">\r\n                  <div class=\"row g-3\">\r\n                    <div class=\"col-md-6\">\r\n                      <label class=\"form-label\">Price Range</label>\r\n                      <div class=\"d-flex gap-2\">\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\"Min\" \r\n                               v-model=\"searchParams.priceMin\" @input=\"emitSearch\">\r\n                        <input type=\"number\" class=\"form-control\" placeholder=\"Max\"\r\n                               v-model=\"searchParams.priceMax\" @input=\"emitSearch\">\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                      <label class=\"form-label\">Sort By</label>\r\n                      <select class=\"form-select\" v-model=\"searchParams.sortBy\" @change=\"emitSearch\">\r\n                        <option value=\"\">Default</option>\r\n                        <option value=\"price_asc\">Price: Low to High</option>\r\n                        <option value=\"price_desc\">Price: High to Low</option>\r\n                        <option value=\"rating\">Rating</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, watch } from 'vue';\r\nimport { serviceAPI } from '@/services/api';\r\n\r\nexport default {\r\n  name: 'ServiceSearchPanel',\r\n  props: {\r\n    initialParams: {\r\n      type: Object,\r\n      default: () => ({})\r\n    },\r\n    categories: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  emits: ['search'],\r\n  setup(props, { emit }) {\r\n    const searchParams = reactive({\r\n      name: props.initialParams.name || '',\r\n      pinCode: props.initialParams.pinCode || '',\r\n      category: props.initialParams.category || '',\r\n      priceMin: props.initialParams.priceMin || '',\r\n      priceMax: props.initialParams.priceMax || '',\r\n      sortBy: props.initialParams.sortBy || ''\r\n    });\r\n\r\n    const emitSearch = () => {\r\n      emit('search', { ...searchParams });\r\n    };\r\n\r\n    // Watch for prop changes\r\n    watch(() => props.initialParams, (newParams) => {\r\n      Object.keys(newParams).forEach(key => {\r\n        if (searchParams[key] !== undefined) {\r\n          searchParams[key] = newParams[key];\r\n        }\r\n      });\r\n    }, { deep: true });\r\n\r\n    return {\r\n      searchParams,\r\n      emitSearch\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.accordion-button:not(.collapsed)::after {\r\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%230d6efd'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\");\r\n}\r\n\r\n.accordion-button.collapsed::after {\r\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%230d6efd'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\");\r\n}\r\n</style>\r\n","/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/components/ServiceCard.vue",[],"/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/components/ServiceReviewForm.vue",[],"/mnt/c/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/services/api.js",[],{"ruleId":"78","severity":1,"message":"79","line":112,"column":8,"nodeType":"80","messageId":"81","endLine":112,"endColumn":19},{"ruleId":"78","severity":1,"message":"82","line":561,"column":11,"nodeType":"80","messageId":"81","endLine":561,"endColumn":30},{"ruleId":"78","severity":1,"message":"83","line":730,"column":17,"nodeType":"80","messageId":"81","endLine":730,"endColumn":25},{"ruleId":"78","severity":1,"message":"84","line":89,"column":10,"nodeType":"80","messageId":"81","endLine":89,"endColumn":13},{"ruleId":"78","severity":1,"message":"85","line":90,"column":10,"nodeType":"80","messageId":"81","endLine":90,"endColumn":20},"no-unused-vars","'ServiceList' is defined but never used.","Identifier","unusedVar","'handleServiceDelete' is assigned a value but never used.","'response' is assigned a value but never used.","'ref' is defined but never used.","'serviceAPI' is defined but never used."]