{"ast":null,"code":"import { ref, computed, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { customerAPI } from '@/services/api';\nexport default {\n  name: 'ServiceRequestDetail',\n  props: {\n    request: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['close', 'updated', 'review', 'cancel'],\n  setup(props, {\n    emit\n  }) {\n    const router = useRouter();\n    const editMode = ref(false);\n    const saving = ref(false);\n    const editedRequest = reactive({\n      pin_code: '',\n      special_instructions: '',\n      is_completed: false\n    });\n\n    // Computed properties for action button visibility\n    const canEdit = computed(() => {\n      return props.request && ['pending', 'assigned'].includes(props.request.status);\n    });\n    const canAddReview = computed(() => {\n      return props.request && props.request.status === 'completed' && !props.request.review;\n    });\n    const canCancel = computed(() => {\n      return props.request && ['pending', 'assigned', 'in_progress'].includes(props.request.status);\n    });\n\n    // Initialize edit form with current values\n    const initializeForm = () => {\n      if (props.request) {\n        editedRequest.pin_code = props.request.pin_code || '';\n        editedRequest.special_instructions = props.request.special_instructions || '';\n        editedRequest.is_completed = props.request.status === 'completed';\n      }\n    };\n\n    // Toggle edit mode\n    const toggleEditMode = () => {\n      if (!editMode.value) {\n        initializeForm();\n      }\n      editMode.value = !editMode.value;\n    };\n\n    // Cancel editing\n    const cancelEdit = () => {\n      editMode.value = false;\n    };\n\n    // Save changes to the service request\n    const saveChanges = async () => {\n      saving.value = true;\n      try {\n        const updatedData = {\n          pin_code: editedRequest.pin_code,\n          special_instructions: editedRequest.special_instructions\n        };\n\n        // If the user is marking the request as completed\n        if (editedRequest.is_completed && props.request.status !== 'completed') {\n          await customerAPI.closeRequest(props.request.id);\n        } else {\n          await customerAPI.updateRequest(props.request.id, updatedData);\n        }\n\n        // Exit edit mode and notify parent component\n        editMode.value = false;\n        saving.value = false;\n        emit('updated');\n      } catch (error) {\n        console.error('Error updating request:', error);\n        alert('Failed to update request: ' + (error.message || 'Unknown error'));\n        saving.value = false;\n      }\n    };\n\n    // Open the review form\n    const openReviewForm = () => {\n      emit('review', props.request);\n    };\n\n    // Cancel the service request\n    const confirmCancel = () => {\n      if (confirm('Are you sure you want to cancel this service request?')) {\n        emit('cancel', props.request);\n      }\n    };\n\n    // Close the detail view\n    const close = () => {\n      emit('close');\n    };\n\n    // View professional profile\n    const viewProfessionalProfile = professionalId => {\n      router.push(`/professional/${professionalId}`);\n    };\n\n    // Helper to format dates\n    const formatDate = dateString => {\n      if (!dateString) return 'N/A';\n      const date = new Date(dateString);\n      return date.toLocaleString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    };\n\n    // Helper to get status badge class\n    const getStatusBadgeClass = status => {\n      const classes = {\n        pending: 'badge bg-warning',\n        assigned: 'badge bg-info',\n        in_progress: 'badge bg-primary',\n        completed: 'badge bg-success',\n        closed: 'badge bg-secondary',\n        cancelled: 'badge bg-danger'\n      };\n      return classes[status] || 'badge bg-secondary';\n    };\n    return {\n      editMode,\n      saving,\n      editedRequest,\n      canEdit,\n      canAddReview,\n      canCancel,\n      toggleEditMode,\n      cancelEdit,\n      saveChanges,\n      openReviewForm,\n      confirmCancel,\n      close,\n      viewProfessionalProfile,\n      formatDate,\n      getStatusBadgeClass\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","reactive","useRouter","customerAPI","name","props","request","type","Object","required","emits","setup","emit","router","editMode","saving","editedRequest","pin_code","special_instructions","is_completed","canEdit","includes","status","canAddReview","review","canCancel","initializeForm","toggleEditMode","value","cancelEdit","saveChanges","updatedData","closeRequest","id","updateRequest","error","console","alert","message","openReviewForm","confirmCancel","confirm","close","viewProfessionalProfile","professionalId","push","formatDate","dateString","date","Date","toLocaleString","year","month","day","hour","minute","getStatusBadgeClass","classes","pending","assigned","in_progress","completed","closed","cancelled"],"sources":["src/components/ServiceRequestDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"service-request-detail\">\r\n    <div class=\"modal-header\">\r\n      <h5 class=\"modal-title\">Request Details</h5>\r\n      <button type=\"button\" class=\"btn-close\" @click=\"close\"></button>\r\n    </div>\r\n    \r\n    <div class=\"modal-body\" v-if=\"request\">\r\n      <div v-if=\"editMode\" class=\"edit-form\">\r\n        <form @submit.prevent=\"saveChanges\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Service</label>\r\n            <input type=\"text\" class=\"form-control\" :value=\"request.service?.name\" disabled>\r\n          </div>\r\n          \r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">PIN Code</label>\r\n            <input \r\n              type=\"text\" \r\n              class=\"form-control\" \r\n              v-model=\"editedRequest.pin_code\"\r\n              pattern=\"[0-9]{6}\"\r\n              required\r\n            >\r\n          </div>\r\n          \r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Special Instructions</label>\r\n            <textarea \r\n              class=\"form-control\" \r\n              rows=\"3\" \r\n              v-model=\"editedRequest.special_instructions\"\r\n            ></textarea>\r\n          </div>\r\n          \r\n          <div class=\"mb-3\" v-if=\"request.status === 'completed'\">\r\n            <label class=\"form-label\">Request Completion</label>\r\n            <div class=\"form-check\">\r\n              <input \r\n                class=\"form-check-input\" \r\n                type=\"checkbox\" \r\n                v-model=\"editedRequest.is_completed\"\r\n                id=\"isCompletedCheck\"\r\n              >\r\n              <label class=\"form-check-label\" for=\"isCompletedCheck\">\r\n                Mark as completed\r\n              </label>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"text-end\">\r\n            <button type=\"button\" class=\"btn btn-secondary me-2\" @click=\"cancelEdit\">\r\n              Cancel\r\n            </button>\r\n            <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"saving\">\r\n              <span v-if=\"saving\" class=\"spinner-border spinner-border-sm me-2\"></span>\r\n              Save Changes\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      \r\n      <div v-else class=\"view-mode\">\r\n        <div class=\"request-details\">\r\n          <h4>{{ request.service?.name }}</h4>\r\n          \r\n          <div class=\"mb-3\">\r\n            <span :class=\"getStatusBadgeClass(request.status)\">\r\n              {{ request.status }}\r\n            </span>\r\n          </div>\r\n          \r\n          <div class=\"mb-3\">\r\n            <h6>Request Timeline</h6>\r\n            <div class=\"timeline\">\r\n              <div class=\"timeline-item\">\r\n                <div class=\"timeline-marker bg-primary\"></div>\r\n                <div class=\"timeline-content\">\r\n                  <div class=\"timeline-heading\">\r\n                    <h6 class=\"mb-0\">Request Created</h6>\r\n                    <small>{{ formatDate(request.created_at) }}</small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div v-if=\"request.accepted_at\" class=\"timeline-item\">\r\n                <div class=\"timeline-marker bg-info\"></div>\r\n                <div class=\"timeline-content\">\r\n                  <div class=\"timeline-heading\">\r\n                    <h6 class=\"mb-0\">Request Accepted</h6>\r\n                    <small>{{ formatDate(request.accepted_at) }}</small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div v-if=\"request.completed_at\" class=\"timeline-item\">\r\n                <div class=\"timeline-marker bg-success\"></div>\r\n                <div class=\"timeline-content\">\r\n                  <div class=\"timeline-heading\">\r\n                    <h6 class=\"mb-0\">Service Completed</h6>\r\n                    <small>{{ formatDate(request.completed_at) }}</small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div v-if=\"request.closed_at\" class=\"timeline-item\">\r\n                <div class=\"timeline-marker bg-secondary\"></div>\r\n                <div class=\"timeline-content\">\r\n                  <div class=\"timeline-heading\">\r\n                    <h6 class=\"mb-0\">Request Closed</h6>\r\n                    <small>{{ formatDate(request.closed_at) }}</small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"mb-3\" v-if=\"request.professional\">\r\n            <h6>Professional Details</h6>\r\n            <p class=\"mb-1\"><strong>Name:</strong> {{ request.professional.professional_name }}</p>\r\n            <p class=\"mb-1\"><strong>Phone:</strong> {{ request.professional.phone || 'N/A' }}</p>\r\n            <p class=\"mb-0\">\r\n              <a href=\"#\" class=\"text-decoration-none\" @click.prevent=\"viewProfessionalProfile(request.professional.id)\">\r\n                <i class=\"fas fa-external-link-alt me-1\"></i> View Profile\r\n              </a>\r\n            </p>\r\n          </div>\r\n          \r\n          <div class=\"mb-3\">\r\n            <h6>Service Details</h6>\r\n            <p class=\"mb-1\"><strong>PIN Code:</strong> {{ request.pin_code }}</p>\r\n            <p class=\"mb-1\"><strong>Base Price:</strong> ₹{{ request.service?.base_price }}</p>\r\n            <p class=\"mb-1\"><strong>Final Amount:</strong> \r\n              {{ request.final_amount ? `₹${request.final_amount}` : 'To be determined' }}\r\n            </p>\r\n            <p class=\"mb-1\"><strong>Service Time:</strong> {{ request.service?.time_required }} minutes</p>\r\n          </div>\r\n          \r\n          <div class=\"mb-3\">\r\n            <h6>Special Instructions</h6>\r\n            <p class=\"mb-0\">{{ request.special_instructions || 'No special instructions provided.' }}</p>\r\n          </div>\r\n          \r\n          <div class=\"mb-4\" v-if=\"request.review\">\r\n            <h6>Your Review</h6>\r\n            <div class=\"review-box p-3 bg-light rounded\">\r\n              <div class=\"stars mb-2\">\r\n                <i v-for=\"n in 5\" :key=\"n\"\r\n                   class=\"fas fa-star\"\r\n                   :class=\"n <= request.review.rating ? 'text-warning' : 'text-muted'\"></i>\r\n              </div>\r\n              <p class=\"mb-1\">{{ request.review.remarks }}</p>\r\n              <small class=\"text-muted\">{{ formatDate(request.review.date_created) }}</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-secondary\" @click=\"close\">Close</button>\r\n      \r\n      <div class=\"action-buttons\">\r\n        <button \r\n          v-if=\"canEdit\"\r\n          type=\"button\" \r\n          class=\"btn btn-primary me-2\" \r\n          @click=\"toggleEditMode\">\r\n          <i class=\"fas fa-edit me-1\"></i> {{ editMode ? 'Cancel Edit' : 'Edit Request' }}\r\n        </button>\r\n        \r\n        <button \r\n          v-if=\"canAddReview\"\r\n          type=\"button\" \r\n          class=\"btn btn-success me-2\" \r\n          @click=\"openReviewForm\">\r\n          <i class=\"fas fa-star me-1\"></i> Add Review\r\n        </button>\r\n        \r\n        <button \r\n          v-if=\"canCancel\"\r\n          type=\"button\" \r\n          class=\"btn btn-danger\" \r\n          @click=\"confirmCancel\">\r\n          <i class=\"fas fa-times me-1\"></i> Cancel Request\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, reactive } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { customerAPI } from '@/services/api';\r\n\r\nexport default {\r\n  name: 'ServiceRequestDetail',\r\n  props: {\r\n    request: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  emits: ['close', 'updated', 'review', 'cancel'],\r\n  setup(props, { emit }) {\r\n    const router = useRouter();\r\n    const editMode = ref(false);\r\n    const saving = ref(false);\r\n    const editedRequest = reactive({\r\n      pin_code: '',\r\n      special_instructions: '',\r\n      is_completed: false\r\n    });\r\n\r\n    // Computed properties for action button visibility\r\n    const canEdit = computed(() => {\r\n      return props.request && ['pending', 'assigned'].includes(props.request.status);\r\n    });\r\n    \r\n    const canAddReview = computed(() => {\r\n      return props.request && \r\n             props.request.status === 'completed' && \r\n             !props.request.review;\r\n    });\r\n    \r\n    const canCancel = computed(() => {\r\n      return props.request && \r\n             ['pending', 'assigned', 'in_progress'].includes(props.request.status);\r\n    });\r\n\r\n    // Initialize edit form with current values\r\n    const initializeForm = () => {\r\n      if (props.request) {\r\n        editedRequest.pin_code = props.request.pin_code || '';\r\n        editedRequest.special_instructions = props.request.special_instructions || '';\r\n        editedRequest.is_completed = props.request.status === 'completed';\r\n      }\r\n    };\r\n\r\n    // Toggle edit mode\r\n    const toggleEditMode = () => {\r\n      if (!editMode.value) {\r\n        initializeForm();\r\n      }\r\n      editMode.value = !editMode.value;\r\n    };\r\n\r\n    // Cancel editing\r\n    const cancelEdit = () => {\r\n      editMode.value = false;\r\n    };\r\n\r\n    // Save changes to the service request\r\n    const saveChanges = async () => {\r\n      saving.value = true;\r\n      try {\r\n        const updatedData = {\r\n          pin_code: editedRequest.pin_code,\r\n          special_instructions: editedRequest.special_instructions\r\n        };\r\n        \r\n        // If the user is marking the request as completed\r\n        if (editedRequest.is_completed && props.request.status !== 'completed') {\r\n          await customerAPI.closeRequest(props.request.id);\r\n        } else {\r\n          await customerAPI.updateRequest(props.request.id, updatedData);\r\n        }\r\n        \r\n        // Exit edit mode and notify parent component\r\n        editMode.value = false;\r\n        saving.value = false;\r\n        emit('updated');\r\n      } catch (error) {\r\n        console.error('Error updating request:', error);\r\n        alert('Failed to update request: ' + (error.message || 'Unknown error'));\r\n        saving.value = false;\r\n      }\r\n    };\r\n\r\n    // Open the review form\r\n    const openReviewForm = () => {\r\n      emit('review', props.request);\r\n    };\r\n\r\n    // Cancel the service request\r\n    const confirmCancel = () => {\r\n      if (confirm('Are you sure you want to cancel this service request?')) {\r\n        emit('cancel', props.request);\r\n      }\r\n    };\r\n\r\n    // Close the detail view\r\n    const close = () => {\r\n      emit('close');\r\n    };\r\n\r\n    // View professional profile\r\n    const viewProfessionalProfile = (professionalId) => {\r\n      router.push(`/professional/${professionalId}`);\r\n    };\r\n\r\n    // Helper to format dates\r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return 'N/A';\r\n      const date = new Date(dateString);\r\n      return date.toLocaleString('en-US', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      });\r\n    };\r\n\r\n    // Helper to get status badge class\r\n    const getStatusBadgeClass = (status) => {\r\n      const classes = {\r\n        pending: 'badge bg-warning',\r\n        assigned: 'badge bg-info',\r\n        in_progress: 'badge bg-primary',\r\n        completed: 'badge bg-success',\r\n        closed: 'badge bg-secondary',\r\n        cancelled: 'badge bg-danger'\r\n      };\r\n      return classes[status] || 'badge bg-secondary';\r\n    };\r\n\r\n    return {\r\n      editMode,\r\n      saving,\r\n      editedRequest,\r\n      canEdit,\r\n      canAddReview,\r\n      canCancel,\r\n      toggleEditMode,\r\n      cancelEdit,\r\n      saveChanges,\r\n      openReviewForm,\r\n      confirmCancel,\r\n      close,\r\n      viewProfessionalProfile,\r\n      formatDate,\r\n      getStatusBadgeClass\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.timeline {\r\n  position: relative;\r\n  padding-left: 30px;\r\n}\r\n\r\n.timeline-item {\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.timeline-marker {\r\n  position: absolute;\r\n  left: -30px;\r\n  top: 5px;\r\n  width: 15px;\r\n  height: 15px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.timeline:before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: -23px;\r\n  width: 2px;\r\n  background-color: #e9ecef;\r\n}\r\n\r\n.stars i {\r\n  color: #e0e0e0;\r\n}\r\n\r\n.stars i.text-warning {\r\n  color: #ffc107;\r\n}\r\n\r\n.review-box {\r\n  border-left: 4px solid #ffc107;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}