{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\n// import Home from '@/views/HomeView.vue'\n\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: () => import('@/views/HomeView.vue')\n}, {\n  path: '/login',\n  name: 'Login',\n  component: () => import('@/views/LoginView.vue'),\n  meta: {\n    guest: true\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: () => import('@/views/RegisterView.vue'),\n  meta: {\n    guest: true\n  }\n}, {\n  path: '/admin/dashboard',\n  name: 'AdminDashboard',\n  component: () => import('@/views/AdminDashboard.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}, {\n  path: '/customer/dashboard',\n  name: 'CustomerDashboard',\n  component: () => import('@/views/CustomerDashboard.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresCustomer: true\n  }\n}, {\n  path: '/professional/dashboard',\n  name: 'ProfessionalDashboard',\n  component: () => import('@/views/ProfessionalDashboard.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresProfessional: true\n  }\n}, {\n  path: '/service-request/:serviceId',\n  name: 'ServiceRequest',\n  component: () => import('@/views/ServiceRequest.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresCustomer: true\n  }\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\n\n// Navigation guard\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n  const userStr = localStorage.getItem('user');\n  const user = userStr ? JSON.parse(userStr) : {};\n  console.log('Navigation:', {\n    to: to.path,\n    hasToken: !!token,\n    userRole: user.role,\n    requiresAuth: to.matched.some(r => r.meta.requiresAuth),\n    requiresAdmin: to.matched.some(r => r.meta.requiresAdmin)\n  });\n\n  // Handle routes requiring authentication\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!token) {\n      console.log('Auth required but no token found - redirecting to login');\n      next('/login');\n      return;\n    }\n    console.log('Checking role-specific requirements');\n    console.log('User role:', user.role);\n\n    // Check role-specific requirements\n    if (to.meta.requiresAdmin && user.role !== 'admin') {\n      console.log('Admin route access denied for non-admin user');\n      next('/');\n      return;\n    }\n    if (to.meta.requiresCustomer && user.role !== 'customer') {\n      console.log('Customer route access denied for non-customer user');\n      next('/');\n      return;\n    }\n    if (to.meta.requiresProfessional && user.role !== 'professional') {\n      console.log('Professional route access denied for non-professional user');\n      next('/');\n      return;\n    }\n  }\n\n  // Guest routes (login/register) should redirect already logged-in users\n  if (to.matched.some(record => record.meta.guest) && token) {\n    console.log('User already logged in, redirecting to dashboard');\n    if (user.role === 'customer') {\n      next('/customer/dashboard');\n    } else if (user.role === 'professional') {\n      next('/professional/dashboard');\n    } else if (user.role === 'admin') {\n      next('/admin/dashboard');\n    } else {\n      next('/');\n    }\n    return;\n  }\n  console.log('Navigation allowed to', to.path);\n  next();\n});\nexport default router;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}