{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  name: 'ProfessionalProfile',\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const professionalId = route.params.id;\n    const profile = ref({});\n    const reviews = ref([]);\n    const loading = ref(true);\n    const error = ref(null);\n\n    // Sample availability calendar\n    const availabilityCalendar = ref([{\n      name: 'Monday',\n      available: true\n    }, {\n      name: 'Tuesday',\n      available: true\n    }, {\n      name: 'Wednesday',\n      available: true\n    }, {\n      name: 'Thursday',\n      available: true\n    }, {\n      name: 'Friday',\n      available: true\n    }, {\n      name: 'Saturday',\n      available: false\n    }, {\n      name: 'Sunday',\n      available: false\n    }]);\n    const fetchProfileData = async () => {\n      loading.value = true;\n      try {\n        const response = await axios.get(`/api/professionals/${professionalId}`);\n        profile.value = response.data;\n\n        // Fetch reviews for this professional\n        const reviewsResponse = await axios.get(`/api/professionals/${professionalId}/reviews`);\n        reviews.value = reviewsResponse.data;\n      } catch (err) {\n        console.error('Error fetching professional profile:', err);\n        error.value = 'Failed to load professional profile. Please try again.';\n      } finally {\n        loading.value = false;\n      }\n    };\n    const requestService = () => {\n      // Navigate to service request form with this professional pre-selected\n      router.push({\n        path: '/service-request',\n        query: {\n          professional: professionalId\n        }\n      });\n    };\n    const formatDate = dateString => {\n      if (!dateString) return 'N/A';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    };\n    onMounted(fetchProfileData);\n    return {\n      profile,\n      reviews,\n      loading,\n      error,\n      availabilityCalendar,\n      requestService,\n      formatDate\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","useRouter","axios","name","setup","route","router","professionalId","params","id","profile","reviews","loading","error","availabilityCalendar","available","fetchProfileData","value","response","get","data","reviewsResponse","err","console","requestService","push","path","query","professional","formatDate","dateString","date","Date","toLocaleDateString","year","month","day"],"sources":["src/views/ProfessionalProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"professional-profile-page\">\r\n    <div class=\"container py-5\">\r\n      <!-- Loading state -->\r\n      <div v-if=\"loading\" class=\"text-center my-5\">\r\n        <div class=\"spinner-border text-primary\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n        <p class=\"mt-2\">Loading professional profile...</p>\r\n      </div>\r\n      \r\n      <!-- Error state -->\r\n      <div v-else-if=\"error\" class=\"alert alert-danger\">\r\n        <i class=\"fas fa-exclamation-triangle me-2\"></i>\r\n        {{ error }}\r\n      </div>\r\n      \r\n      <!-- Content when loaded -->\r\n      <div v-else class=\"row\">\r\n        <!-- Profile Information -->\r\n        <div class=\"col-lg-4 mb-4\">\r\n          <div class=\"card profile-card\">\r\n            <div class=\"card-body text-center\">\r\n              <div class=\"profile-image mb-3\">\r\n                <img src=\"https://via.placeholder.com/150\" alt=\"Professional\" class=\"rounded-circle img-thumbnail\">\r\n              </div>\r\n              <h3>{{ profile.professional_name }}</h3>\r\n              <div class=\"d-flex justify-content-center mb-3\">\r\n                <div class=\"rating\">\r\n                  <i v-for=\"n in 5\" :key=\"n\" class=\"fas fa-star\" \r\n                    :class=\"n <= profile.average_rating ? 'text-warning' : 'text-muted'\"></i>\r\n                  <span class=\"ms-1\">{{ profile.average_rating }}/5 ({{ profile.total_reviews }} reviews)</span>\r\n                </div>\r\n              </div>\r\n              <span class=\"badge bg-primary rounded-pill mb-3\">{{ profile.service_type }}</span>\r\n              <p class=\"text-muted\">{{ profile.description || 'No description available.' }}</p>\r\n              <hr>\r\n              <div class=\"text-start\">\r\n                <p class=\"mb-2\"><strong><i class=\"fas fa-briefcase me-2\"></i>Experience:</strong> {{ profile.experience }} years</p>\r\n                <p class=\"mb-2\"><strong><i class=\"fas fa-calendar-check me-2\"></i>Joined:</strong> {{ formatDate(profile.date_created) }}</p>\r\n                <p class=\"mb-0\"><strong><i class=\"fas fa-check-circle me-2\"></i>Status:</strong>\r\n                  <span :class=\"profile.is_available ? 'text-success' : 'text-secondary'\">\r\n                    {{ profile.is_available ? 'Available for Work' : 'Currently Unavailable' }}\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Reviews Section -->\r\n        <div class=\"col-lg-8\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header bg-white\">\r\n              <h4 class=\"mb-0\">Customer Reviews</h4>\r\n            </div>\r\n            <div class=\"card-body p-0\">\r\n              <div v-if=\"reviews.length === 0\" class=\"text-center py-5\">\r\n                <i class=\"fas fa-star fa-3x text-muted mb-3\"></i>\r\n                <h5>No Reviews Yet</h5>\r\n                <p class=\"text-muted\">This professional hasn't received any reviews yet.</p>\r\n              </div>\r\n              \r\n              <div v-else class=\"list-group list-group-flush\">\r\n                <div v-for=\"review in reviews\" :key=\"review.id\" class=\"list-group-item p-3\">\r\n                  <div class=\"d-flex justify-content-between mb-2\">\r\n                    <div>\r\n                      <h5 class=\"mb-0\">{{ review.customer_name }}</h5>\r\n                      <small class=\"text-muted\">{{ formatDate(review.date_created) }}</small>\r\n                    </div>\r\n                    <div class=\"rating\">\r\n                      <i v-for=\"n in 5\" :key=\"n\" class=\"fas fa-star\" \r\n                        :class=\"n <= review.rating ? 'text-warning' : 'text-muted'\"></i>\r\n                    </div>\r\n                  </div>\r\n                  <p class=\"mb-1\">{{ review.remarks }}</p>\r\n                  <small class=\"text-muted\">Service: {{ review.service_name }}</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- Availability Calendar (for demonstration) -->\r\n          <div class=\"card mt-4\">\r\n            <div class=\"card-header bg-white d-flex justify-content-between align-items-center\">\r\n              <h4 class=\"mb-0\">Availability</h4>\r\n              <div>\r\n                <button class=\"btn btn-outline-primary btn-sm\" @click=\"requestService\" :disabled=\"!profile.is_available\">\r\n                  <i class=\"fas fa-calendar-plus me-1\"></i> Request Service\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div v-if=\"!profile.is_available\" class=\"alert alert-warning\">\r\n                <i class=\"fas fa-exclamation-circle me-2\"></i>\r\n                This professional is currently unavailable for new service requests.\r\n              </div>\r\n              \r\n              <!-- Simple weekly availability display -->\r\n              <div class=\"availability-grid\">\r\n                <div v-for=\"day in availabilityCalendar\" :key=\"day.name\" class=\"day-column\">\r\n                  <div class=\"day-header\">{{ day.name }}</div>\r\n                  <div class=\"day-availability\" :class=\"{ 'is-available': day.available }\">\r\n                    {{ day.available ? 'Available' : 'Unavailable' }}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ProfessionalProfile',\r\n  setup() {\r\n    const route = useRoute();\r\n    const router = useRouter();\r\n    const professionalId = route.params.id;\r\n    \r\n    const profile = ref({});\r\n    const reviews = ref([]);\r\n    const loading = ref(true);\r\n    const error = ref(null);\r\n    \r\n    // Sample availability calendar\r\n    const availabilityCalendar = ref([\r\n      { name: 'Monday', available: true },\r\n      { name: 'Tuesday', available: true },\r\n      { name: 'Wednesday', available: true },\r\n      { name: 'Thursday', available: true },\r\n      { name: 'Friday', available: true },\r\n      { name: 'Saturday', available: false },\r\n      { name: 'Sunday', available: false }\r\n    ]);\r\n    \r\n    const fetchProfileData = async () => {\r\n      loading.value = true;\r\n      try {\r\n        const response = await axios.get(`/api/professionals/${professionalId}`);\r\n        profile.value = response.data;\r\n        \r\n        // Fetch reviews for this professional\r\n        const reviewsResponse = await axios.get(`/api/professionals/${professionalId}/reviews`);\r\n        reviews.value = reviewsResponse.data;\r\n      } catch (err) {\r\n        console.error('Error fetching professional profile:', err);\r\n        error.value = 'Failed to load professional profile. Please try again.';\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    const requestService = () => {\r\n      // Navigate to service request form with this professional pre-selected\r\n      router.push({\r\n        path: '/service-request',\r\n        query: { professional: professionalId }\r\n      });\r\n    };\r\n    \r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return 'N/A';\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('en-US', {\r\n        year: 'numeric', \r\n        month: 'long', \r\n        day: 'numeric'\r\n      });\r\n    };\r\n    \r\n    onMounted(fetchProfileData);\r\n    \r\n    return {\r\n      profile,\r\n      reviews,\r\n      loading,\r\n      error,\r\n      availabilityCalendar,\r\n      requestService,\r\n      formatDate\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.professional-profile-page {\r\n  background-color: #f8f9fa;\r\n  min-height: 100vh;\r\n}\r\n\r\n.profile-card {\r\n  border-radius: 15px;\r\n}\r\n\r\n.profile-image {\r\n  width: 150px;\r\n  height: 150px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.profile-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.rating {\r\n  display: inline-block;\r\n}\r\n\r\n.rating .fas {\r\n  color: #e0e0e0;\r\n}\r\n\r\n.rating .fas.text-warning {\r\n  color: #ffc107;\r\n}\r\n\r\n.list-group-item {\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.list-group-item:hover {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.availability-grid {\r\n  display: flex;\r\n  gap: 10px;\r\n  overflow-x: auto;\r\n}\r\n\r\n.day-column {\r\n  flex: 1;\r\n  min-width: 100px;\r\n  text-align: center;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n}\r\n\r\n.day-header {\r\n  background-color: #f8f9fa;\r\n  padding: 8px;\r\n  font-weight: 500;\r\n}\r\n\r\n.day-availability {\r\n  padding: 15px 8px;\r\n}\r\n\r\n.day-availability.is-available {\r\n  background-color: #d4edda;\r\n  color: #155724;\r\n}\r\n\r\n.day-availability:not(.is-available) {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n}\r\n</style>\r\n"],"mappings":"AAoHA,SAAAA,GAAA,EAAAC,SAAA;AACA,SAAAC,QAAA,EAAAC,SAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,MAAA;IACA,MAAAC,KAAA,GAAAL,QAAA;IACA,MAAAM,MAAA,GAAAL,SAAA;IACA,MAAAM,cAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,EAAA;IAEA,MAAAC,OAAA,GAAAZ,GAAA;IACA,MAAAa,OAAA,GAAAb,GAAA;IACA,MAAAc,OAAA,GAAAd,GAAA;IACA,MAAAe,KAAA,GAAAf,GAAA;;IAEA;IACA,MAAAgB,oBAAA,GAAAhB,GAAA,EACA;MAAAK,IAAA;MAAAY,SAAA;IAAA,GACA;MAAAZ,IAAA;MAAAY,SAAA;IAAA,GACA;MAAAZ,IAAA;MAAAY,SAAA;IAAA,GACA;MAAAZ,IAAA;MAAAY,SAAA;IAAA,GACA;MAAAZ,IAAA;MAAAY,SAAA;IAAA,GACA;MAAAZ,IAAA;MAAAY,SAAA;IAAA,GACA;MAAAZ,IAAA;MAAAY,SAAA;IAAA,EACA;IAEA,MAAAC,gBAAA,SAAAA,CAAA;MACAJ,OAAA,CAAAK,KAAA;MACA;QACA,MAAAC,QAAA,SAAAhB,KAAA,CAAAiB,GAAA,uBAAAZ,cAAA;QACAG,OAAA,CAAAO,KAAA,GAAAC,QAAA,CAAAE,IAAA;;QAEA;QACA,MAAAC,eAAA,SAAAnB,KAAA,CAAAiB,GAAA,uBAAAZ,cAAA;QACAI,OAAA,CAAAM,KAAA,GAAAI,eAAA,CAAAD,IAAA;MACA,SAAAE,GAAA;QACAC,OAAA,CAAAV,KAAA,yCAAAS,GAAA;QACAT,KAAA,CAAAI,KAAA;MACA;QACAL,OAAA,CAAAK,KAAA;MACA;IACA;IAEA,MAAAO,cAAA,GAAAA,CAAA;MACA;MACAlB,MAAA,CAAAmB,IAAA;QACAC,IAAA;QACAC,KAAA;UAAAC,YAAA,EAAArB;QAAA;MACA;IACA;IAEA,MAAAsB,UAAA,GAAAC,UAAA;MACA,KAAAA,UAAA;MACA,MAAAC,IAAA,OAAAC,IAAA,CAAAF,UAAA;MACA,OAAAC,IAAA,CAAAE,kBAAA;QACAC,IAAA;QACAC,KAAA;QACAC,GAAA;MACA;IACA;IAEArC,SAAA,CAAAiB,gBAAA;IAEA;MACAN,OAAA;MACAC,OAAA;MACAC,OAAA;MACAC,KAAA;MACAC,oBAAA;MACAU,cAAA;MACAK;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}