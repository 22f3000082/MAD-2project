{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\n// import Home from '@/views/HomeView.vue'\n\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: () => import('@/views/HomeView.vue')\n}, {\n  path: '/login',\n  name: 'Login',\n  component: () => import('@/views/LoginView.vue'),\n  meta: {\n    guest: true\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: () => import('@/views/RegisterView.vue'),\n  meta: {\n    guest: true\n  }\n}, {\n  path: '/admin/dashboard',\n  name: 'AdminDashboard',\n  component: () => import('@/views/AdminDashboard.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}, {\n  path: '/customer/dashboard',\n  name: 'CustomerDashboard',\n  component: () => import('@/views/CustomerDashboard.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresCustomer: true\n  }\n}, {\n  path: '/professional/dashboard',\n  name: 'ProfessionalDashboard',\n  component: () => import('@/views/ProfessionalDashboard.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresProfessional: true\n  }\n}, {\n  path: '/service-request/:serviceId',\n  name: 'ServiceRequest',\n  component: () => import('@/views/ServiceRequest.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresCustomer: true\n  }\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\n\n// Navigation guard\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n  const userStr = localStorage.getItem('user');\n  const user = userStr ? JSON.parse(userStr) : {};\n  console.log('Navigation:', {\n    to: to.path,\n    hasToken: !!token,\n    userRole: user.role,\n    requiresAuth: to.matched.some(r => r.meta.requiresAuth),\n    requiresAdmin: to.matched.some(r => r.meta.requiresAdmin)\n  });\n\n  // Handle routes requiring authentication\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!token) {\n      if (to.path !== '/login') {\n        // Only redirect if not already on /login\n        console.log('Auth required but no token found - redirecting to login');\n        next('/login');\n      } else {\n        console.log('Already on login page, no need to redirect');\n        next();\n      }\n      return;\n    }\n    console.log('Checking role-specific requirements');\n    console.log('User role:', user.role);\n\n    // Check role-specific requirements\n    if (to.meta.requiresAdmin && user.role !== 'admin') {\n      console.log('Admin route access denied for non-admin user');\n      next('/');\n      return;\n    }\n    if (to.meta.requiresCustomer && user.role !== 'customer') {\n      console.log('Customer route access denied for non-customer user');\n      next('/');\n      return;\n    }\n    if (to.meta.requiresProfessional && user.role !== 'professional') {\n      console.log('Professional route access denied for non-professional user');\n      next('/');\n      return;\n    }\n  }\n\n  // // Guest routes (login/register) should redirect already logged-in users\n  // if (to.matched.some(record => record.meta.guest)) {\n  //   if (token) {\n  //     console.log('User already logged in, redirecting to dashboard');\n  //     if (user.role === 'customer') {\n  //       next('/customer/dashboard');\n  //     } else if (user.role === 'professional') {\n  //       next('/professional/dashboard');\n  //     } else if (user.role === 'admin') {\n  //       next('/admin/dashboard');\n  //     } else {\n  //       next('/');\n  //     }\n  //     return;\n  //   }\n  // }\n\n  console.log('Navigation allowed to', to.path);\n  next(); // Allow navigation\n  // Guest routes (login/register) should redirect already logged-in users\n  if (to.matched.some(record => record.meta.guest) && token) {\n    if (token && to.path === '/login') {\n      console.log('User already logged in, avoiding unnecessary login navigation');\n      if (user.role === 'customer') {\n        next('/customer/dashboard');\n      } else if (user.role === 'professional') {\n        next('/professional/dashboard');\n      } else if (user.role === 'admin') {\n        next('/admin/dashboard');\n      } else {\n        next('/');\n      }\n      return;\n    }\n  }\n  console.log('Navigation allowed to', to.path);\n  next();\n});\n\n//  console.log('Navigation allowed to', to.path)\n// next()\n\n// export default router","map":{"version":3,"names":["Vue","VueRouter","use","routes","path","name","component","meta","guest","requiresAuth","requiresAdmin","requiresCustomer","requiresProfessional","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","token","localStorage","getItem","userStr","user","JSON","parse","console","log","hasToken","userRole","role","matched","some","r","record"],"sources":["C:/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\n// import Home from '@/views/HomeView.vue'\r\n\r\nVue.use(VueRouter)\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component:  () => import('@/views/HomeView.vue')\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: () => import('@/views/LoginView.vue'),\r\n    meta: { guest: true }\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: () => import('@/views/RegisterView.vue'),\r\n    meta: { guest: true }\r\n  },\r\n  {\r\n    path: '/admin/dashboard',\r\n    name: 'AdminDashboard',\r\n    component: () => import('@/views/AdminDashboard.vue'),\r\n    meta: { requiresAuth: true, requiresAdmin: true }\r\n  },\r\n  {\r\n    path: '/customer/dashboard',\r\n    name: 'CustomerDashboard',\r\n    component: () => import('@/views/CustomerDashboard.vue'),\r\n    meta: { requiresAuth: true, requiresCustomer: true }\r\n  },\r\n  {\r\n    path: '/professional/dashboard',\r\n    name: 'ProfessionalDashboard',\r\n    component: () => import('@/views/ProfessionalDashboard.vue'),\r\n    meta: { requiresAuth: true, requiresProfessional: true }\r\n  },\r\n  {\r\n    path: '/service-request/:serviceId',\r\n    name: 'ServiceRequest',\r\n    component: () => import('@/views/ServiceRequest.vue'),\r\n    meta: { requiresAuth: true, requiresCustomer: true }\r\n  }\r\n]\r\n\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes\r\n})\r\n\r\n// Navigation guard\r\nrouter.beforeEach((to, from, next) => {\r\n  const token = localStorage.getItem('token')\r\n  const userStr = localStorage.getItem('user')\r\n  const user = userStr ? JSON.parse(userStr) : {}\r\n  \r\n  console.log('Navigation:', {\r\n    to: to.path,\r\n    hasToken: !!token,\r\n    userRole: user.role,\r\n    requiresAuth: to.matched.some(r => r.meta.requiresAuth),\r\n    requiresAdmin: to.matched.some(r => r.meta.requiresAdmin)\r\n  })\r\n  \r\n  // Handle routes requiring authentication\r\n  if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    if (!token) {\r\n      if (to.path !== '/login') { // Only redirect if not already on /login\r\n        console.log('Auth required but no token found - redirecting to login')\r\n        next('/login')\r\n      } else {\r\n        console.log('Already on login page, no need to redirect')\r\n        next()\r\n      }\r\n      return\r\n    }\r\n    \r\n    \r\n    console.log('Checking role-specific requirements')\r\n    console.log('User role:', user.role)\r\n    \r\n    // Check role-specific requirements\r\n    if (to.meta.requiresAdmin && user.role !== 'admin') {\r\n      console.log('Admin route access denied for non-admin user')\r\n      next('/')\r\n      return\r\n    }\r\n    \r\n    if (to.meta.requiresCustomer && user.role !== 'customer') {\r\n      console.log('Customer route access denied for non-customer user')\r\n      next('/')\r\n      return\r\n    }\r\n    \r\n    if (to.meta.requiresProfessional && user.role !== 'professional') {\r\n      console.log('Professional route access denied for non-professional user')\r\n      next('/')\r\n      return\r\n    }\r\n  }\r\n\r\n\r\n  // // Guest routes (login/register) should redirect already logged-in users\r\n  // if (to.matched.some(record => record.meta.guest)) {\r\n  //   if (token) {\r\n  //     console.log('User already logged in, redirecting to dashboard');\r\n  //     if (user.role === 'customer') {\r\n  //       next('/customer/dashboard');\r\n  //     } else if (user.role === 'professional') {\r\n  //       next('/professional/dashboard');\r\n  //     } else if (user.role === 'admin') {\r\n  //       next('/admin/dashboard');\r\n  //     } else {\r\n  //       next('/');\r\n  //     }\r\n  //     return;\r\n  //   }\r\n  // }\r\n\r\n  console.log('Navigation allowed to', to.path);\r\n  next(); // Allow navigation\r\n  // Guest routes (login/register) should redirect already logged-in users\r\n  if (to.matched.some(record => record.meta.guest) && token) {\r\n    if (token && to.path === '/login') {\r\n      console.log('User already logged in, avoiding unnecessary login navigation')\r\n    if (user.role === 'customer') {\r\n      next('/customer/dashboard')\r\n    } else if (user.role === 'professional') {\r\n      next('/professional/dashboard')\r\n    } else if (user.role === 'admin') {\r\n      next('/admin/dashboard')\r\n    } else {\r\n      next('/')\r\n    }\r\n    return}\r\n  }\r\n    console.log('Navigation allowed to', to.path)\r\n          next()\r\n   });\r\n  \r\n\r\n  //  console.log('Navigation allowed to', to.path)\r\n  // next()\r\n\r\n\r\n// export default router"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}