{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { serviceAPI, customerAPI } from '@/services/api';\nexport default {\n  setup() {\n    const service = ref(null);\n    const loading = ref(true);\n    const error = ref(null);\n    const fetchServiceDetails = async serviceId => {\n      try {\n        loading.value = true;\n        error.value = null;\n        console.log(`ServiceRequest: Fetching details for service ID ${serviceId}`);\n\n        // Try first the specific service endpoint\n        try {\n          const serviceData = await serviceAPI.getServiceById(serviceId);\n          service.value = serviceData;\n        } catch (specificError) {\n          console.error('ServiceRequest: Failed to get specific service, trying services list:', specificError);\n\n          // Fallback: get all services and find the one we need\n          const services = await serviceAPI.getServices();\n          service.value = services.find(s => s.id === parseInt(serviceId));\n          if (!service.value) {\n            throw new Error('Service not found');\n          }\n        }\n        console.log('ServiceRequest: Successfully loaded service:', service.value);\n        loading.value = false;\n      } catch (err) {\n        console.error('ServiceRequest: Error fetching service:', err);\n        error.value = err.message || 'Failed to load service details';\n        loading.value = false;\n      }\n    };\n    onMounted(() => {\n      const serviceId = route.params.serviceId;\n      fetchServiceDetails(serviceId);\n    });\n  }\n};","map":{"version":3,"names":["ref","onMounted","serviceAPI","customerAPI","setup","service","loading","error","fetchServiceDetails","serviceId","value","console","log","serviceData","getServiceById","specificError","services","getServices","find","s","id","parseInt","Error","err","message","route","params"],"sources":["src/views/ServiceRequest.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Service Request</h1>\r\n    </div>\r\n  </template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { serviceAPI, customerAPI } from '@/services/api';\r\n\r\nexport default {\r\n  setup() {\r\n    const service = ref(null);\r\n    const loading = ref(true);\r\n    const error = ref(null);\r\n    \r\n    const fetchServiceDetails = async (serviceId) => {\r\n      try {\r\n        loading.value = true;\r\n        error.value = null;\r\n        console.log(`ServiceRequest: Fetching details for service ID ${serviceId}`);\r\n        \r\n        // Try first the specific service endpoint\r\n        try {\r\n          const serviceData = await serviceAPI.getServiceById(serviceId);\r\n          service.value = serviceData;\r\n        } catch (specificError) {\r\n          console.error('ServiceRequest: Failed to get specific service, trying services list:', specificError);\r\n          \r\n          // Fallback: get all services and find the one we need\r\n          const services = await serviceAPI.getServices();\r\n          service.value = services.find(s => s.id === parseInt(serviceId));\r\n          \r\n          if (!service.value) {\r\n            throw new Error('Service not found');\r\n          }\r\n        }\r\n        \r\n        console.log('ServiceRequest: Successfully loaded service:', service.value);\r\n        loading.value = false;\r\n      } catch (err) {\r\n        console.error('ServiceRequest: Error fetching service:', err);\r\n        error.value = err.message || 'Failed to load service details';\r\n        loading.value = false;\r\n      }\r\n    };\r\n    \r\n    onMounted(() => {\r\n      const serviceId = route.params.serviceId;\r\n      fetchServiceDetails(serviceId);\r\n    });\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"AAOA,SAAAA,GAAA,EAAAC,SAAA;AACA,SAAAC,UAAA,EAAAC,WAAA;AAEA;EACAC,MAAA;IACA,MAAAC,OAAA,GAAAL,GAAA;IACA,MAAAM,OAAA,GAAAN,GAAA;IACA,MAAAO,KAAA,GAAAP,GAAA;IAEA,MAAAQ,mBAAA,SAAAC,SAAA;MACA;QACAH,OAAA,CAAAI,KAAA;QACAH,KAAA,CAAAG,KAAA;QACAC,OAAA,CAAAC,GAAA,oDAAAH,SAAA;;QAEA;QACA;UACA,MAAAI,WAAA,SAAAX,UAAA,CAAAY,cAAA,CAAAL,SAAA;UACAJ,OAAA,CAAAK,KAAA,GAAAG,WAAA;QACA,SAAAE,aAAA;UACAJ,OAAA,CAAAJ,KAAA,0EAAAQ,aAAA;;UAEA;UACA,MAAAC,QAAA,SAAAd,UAAA,CAAAe,WAAA;UACAZ,OAAA,CAAAK,KAAA,GAAAM,QAAA,CAAAE,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,EAAA,KAAAC,QAAA,CAAAZ,SAAA;UAEA,KAAAJ,OAAA,CAAAK,KAAA;YACA,UAAAY,KAAA;UACA;QACA;QAEAX,OAAA,CAAAC,GAAA,iDAAAP,OAAA,CAAAK,KAAA;QACAJ,OAAA,CAAAI,KAAA;MACA,SAAAa,GAAA;QACAZ,OAAA,CAAAJ,KAAA,4CAAAgB,GAAA;QACAhB,KAAA,CAAAG,KAAA,GAAAa,GAAA,CAAAC,OAAA;QACAlB,OAAA,CAAAI,KAAA;MACA;IACA;IAEAT,SAAA;MACA,MAAAQ,SAAA,GAAAgB,KAAA,CAAAC,MAAA,CAAAjB,SAAA;MACAD,mBAAA,CAAAC,SAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}