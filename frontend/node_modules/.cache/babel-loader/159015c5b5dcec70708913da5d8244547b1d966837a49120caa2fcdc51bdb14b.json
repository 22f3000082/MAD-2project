{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\n// import Home from '@/views/HomeView.vue'\n\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: () => import('@/views/HomeView.vue')\n}, {\n  path: '/login',\n  name: 'Login',\n  component: () => import('@/views/LoginView.vue'),\n  meta: {\n    guest: true\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: () => import('@/views/RegisterView.vue'),\n  meta: {\n    guest: true\n  }\n}, {\n  path: '/admin/dashboard',\n  name: 'AdminDashboard',\n  component: () => import('@/views/AdminDashboard.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}, {\n  path: '/customer/dashboard',\n  name: 'CustomerDashboard',\n  component: () => import('@/views/CustomerDashboard.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresCustomer: true\n  }\n}, {\n  path: '/professional/dashboard',\n  name: 'ProfessionalDashboard',\n  component: () => import('@/views/ProfessionalDashboard.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresProfessional: true\n  }\n}, {\n  path: '/service-request/:serviceId',\n  name: 'ServiceRequest',\n  component: () => import('@/views/ServiceRequest.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresCustomer: true\n  }\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\n\n// Navigation guard\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n  const userStr = localStorage.getItem('user');\n  const user = userStr ? JSON.parse(userStr) : {};\n  console.log('Route navigation:', {\n    to: to.path,\n    user: user.role,\n    hasToken: !!token\n  });\n\n  // Handle routes requiring authentication\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!token) {\n      console.log('No authentication token found, redirecting to login');\n      next('/login');\n      return;\n    }\n\n    // Check role-specific requirements\n    if (to.meta.requiresAdmin && user.role !== 'admin') {\n      console.log('Admin route access denied');\n      next('/');\n      return;\n    }\n    if (to.meta.requiresCustomer && user.role !== 'customer') {\n      console.log('Customer route access denied');\n      next('/');\n      return;\n    }\n    if (to.meta.requiresProfessional && user.role !== 'professional') {\n      console.log('Professional route access denied');\n      next('/');\n      return;\n    }\n  }\n  // Handle guest routes (login, register)\n  else if (to.matched.some(record => record.meta.guest) && token) {\n    console.log('User already authenticated, redirecting to dashboard');\n    if (user.role === 'customer') {\n      next('/customer/dashboard');\n      return;\n    } else if (user.role === 'professional') {\n      next('/professional/dashboard');\n      return;\n    } else if (user.role === 'admin') {\n      next('/admin/dashboard');\n      return;\n    }\n  }\n\n  // Allow navigation\n  console.log('Navigation proceeding to', to.path);\n  next();\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","use","routes","path","name","component","meta","guest","requiresAuth","requiresAdmin","requiresCustomer","requiresProfessional","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","token","localStorage","getItem","userStr","user","JSON","parse","console","log","role","hasToken","matched","some","record"],"sources":["C:/Users/91829/OneDrive/Documents/VS CODE/Household_service_22f3000082/frontend/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\n// import Home from '@/views/HomeView.vue'\r\n\r\nVue.use(VueRouter)\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component:  () => import('@/views/HomeView.vue')\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: () => import('@/views/LoginView.vue'),\r\n    meta: { guest: true }\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: () => import('@/views/RegisterView.vue'),\r\n    meta: { guest: true }\r\n  },\r\n  {\r\n    path: '/admin/dashboard',\r\n    name: 'AdminDashboard',\r\n    component: () => import('@/views/AdminDashboard.vue'),\r\n    meta: { requiresAuth: true, requiresAdmin: true }\r\n  },\r\n  {\r\n    path: '/customer/dashboard',\r\n    name: 'CustomerDashboard',\r\n    component: () => import('@/views/CustomerDashboard.vue'),\r\n    meta: { requiresAuth: true, requiresCustomer: true }\r\n  },\r\n  {\r\n    path: '/professional/dashboard',\r\n    name: 'ProfessionalDashboard',\r\n    component: () => import('@/views/ProfessionalDashboard.vue'),\r\n    meta: { requiresAuth: true, requiresProfessional: true }\r\n  },\r\n  {\r\n    path: '/service-request/:serviceId',\r\n    name: 'ServiceRequest',\r\n    component: () => import('@/views/ServiceRequest.vue'),\r\n    meta: { requiresAuth: true, requiresCustomer: true }\r\n  }\r\n]\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes\r\n})\r\n\r\n// Navigation guard\r\nrouter.beforeEach((to, from, next) => {\r\n  const token = localStorage.getItem('token')\r\n  const userStr = localStorage.getItem('user')\r\n  const user = userStr ? JSON.parse(userStr) : {}\r\n  \r\n  console.log('Route navigation:', { to: to.path, user: user.role, hasToken: !!token })\r\n  \r\n  // Handle routes requiring authentication\r\n  if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    if (!token) {\r\n      console.log('No authentication token found, redirecting to login')\r\n      next('/login')\r\n      return\r\n    }\r\n\r\n    // Check role-specific requirements\r\n    if (to.meta.requiresAdmin && user.role !== 'admin') {\r\n      console.log('Admin route access denied')\r\n      next('/')\r\n      return\r\n    }\r\n    \r\n    if (to.meta.requiresCustomer && user.role !== 'customer') {\r\n      console.log('Customer route access denied')\r\n      next('/')\r\n      return\r\n    }\r\n    \r\n    if (to.meta.requiresProfessional && user.role !== 'professional') {\r\n      console.log('Professional route access denied')\r\n      next('/')\r\n      return\r\n    }\r\n  } \r\n  // Handle guest routes (login, register)\r\n  else if (to.matched.some(record => record.meta.guest) && token) {\r\n    console.log('User already authenticated, redirecting to dashboard')\r\n    if (user.role === 'customer') {\r\n      next('/customer/dashboard')\r\n      return\r\n    } else if (user.role === 'professional') {\r\n      next('/professional/dashboard') \r\n      return\r\n    } else if (user.role === 'admin') {\r\n      next('/admin/dashboard')\r\n      return\r\n    }\r\n  }\r\n\r\n  // Allow navigation\r\n  console.log('Navigation proceeding to', to.path)\r\n  next()\r\n})\r\n\r\nexport default router\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}