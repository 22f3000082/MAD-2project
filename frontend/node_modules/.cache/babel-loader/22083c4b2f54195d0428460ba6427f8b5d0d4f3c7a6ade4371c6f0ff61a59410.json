{"ast":null,"code":"import { serviceAPI, customerAPI } from '@/services/api';\nexport default {\n  name: 'ServiceDetails',\n  props: {\n    serviceId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data() {\n    return {\n      service: {},\n      reviews: [],\n      relatedServices: [],\n      loading: true,\n      error: null,\n      submitting: false,\n      showSuccessModal: false,\n      requestForm: {\n        service_id: null,\n        pin_code: '',\n        special_instructions: ''\n      },\n      // Sample data for what's included (could come from API)\n      serviceIncludes: ['Professional service provider', 'Standard service time', 'Quality assurance', 'Customer satisfaction guarantee']\n    };\n  },\n  methods: {\n    async fetchServiceDetails() {\n      try {\n        this.loading = true;\n        this.error = null;\n        const service = await serviceAPI.getServiceById(this.serviceId);\n        this.service = service;\n\n        // Set the service ID in the request form\n        this.requestForm.service_id = this.service.id;\n\n        // In a real app, you would fetch related services and reviews here\n        this.fetchRelatedServices();\n        this.fetchReviews();\n        this.loading = false;\n      } catch (error) {\n        console.error('Error fetching service details:', error);\n        this.error = 'Failed to load service details. Please try again.';\n        this.loading = false;\n      }\n    },\n    async fetchRelatedServices() {\n      // This would normally be an API call to get related services based on category\n      // For demo purposes we'll just wait and populate with sample data\n      setTimeout(() => {\n        this.relatedServices = [{\n          id: 1,\n          name: 'Basic Plumbing',\n          base_price: 600,\n          time_required: 60\n        }, {\n          id: 2,\n          name: 'Advanced Plumbing',\n          base_price: 1200,\n          time_required: 120\n        }, {\n          id: 3,\n          name: 'Emergency Plumbing',\n          base_price: 1500,\n          time_required: 90\n        }];\n      }, 1000);\n    },\n    async fetchReviews() {\n      // This would normally be an API call to get reviews for this service\n      // For demo purposes we'll just wait and populate with sample data\n      setTimeout(() => {\n        this.reviews = [{\n          id: 1,\n          customer_name: 'John Doe',\n          rating: 5,\n          remarks: 'Excellent service! The professional was on time and did a great job.',\n          date_created: '2023-09-15T10:30:00Z'\n        }, {\n          id: 2,\n          customer_name: 'Jane Smith',\n          rating: 4,\n          remarks: 'Good service overall. Would recommend to others.',\n          date_created: '2023-09-10T14:45:00Z'\n        }, {\n          id: 3,\n          customer_name: 'Mike Johnson',\n          rating: 3,\n          remarks: 'Average service. Took longer than expected.',\n          date_created: '2023-09-05T09:20:00Z'\n        }];\n      }, 1000);\n    },\n    async submitRequest() {\n      this.submitting = true;\n      try {\n        // Make sure the service_id is set\n        this.requestForm.service_id = this.service.id;\n\n        // Send the request to the API\n        await customerAPI.createRequest(this.requestForm);\n\n        // Reset the form\n        this.requestForm = {\n          service_id: this.service.id,\n          pin_code: '',\n          special_instructions: ''\n        };\n\n        // Show success message\n        this.showSuccessModal = true;\n      } catch (error) {\n        console.error('Error submitting service request:', error);\n        alert('Failed to submit service request: ' + (error.message || 'Unknown error'));\n      } finally {\n        this.submitting = false;\n      }\n    },\n    navigateToService(serviceId) {\n      // Navigate to the details page for another service\n      this.$router.push(`/service-details/${serviceId}`);\n    },\n    goToRequests() {\n      // Close the modal and navigate to requests page\n      this.showSuccessModal = false;\n      this.$router.push('/customer/dashboard');\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n    }\n  },\n  created() {\n    this.fetchServiceDetails();\n  }\n};","map":{"version":3,"names":["serviceAPI","customerAPI","name","props","serviceId","type","String","Number","required","data","service","reviews","relatedServices","loading","error","submitting","showSuccessModal","requestForm","service_id","pin_code","special_instructions","serviceIncludes","methods","fetchServiceDetails","getServiceById","id","fetchRelatedServices","fetchReviews","console","setTimeout","base_price","time_required","customer_name","rating","remarks","date_created","submitRequest","createRequest","alert","message","navigateToService","$router","push","goToRequests","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","created"],"sources":["src/views/ServiceDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"service-details-page\">\r\n    <div class=\"container py-5\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-8\">\r\n          <!-- Service Information -->\r\n          <div class=\"card mb-4\">\r\n            <div class=\"card-body\">\r\n              <div v-if=\"loading\" class=\"text-center py-4\">\r\n                <div class=\"spinner-border text-primary\" role=\"status\">\r\n                  <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n                <p class=\"mt-2\">Loading service details...</p>\r\n              </div>\r\n\r\n              <div v-else-if=\"error\" class=\"alert alert-danger\">\r\n                {{ error }}\r\n              </div>\r\n\r\n              <div v-else>\r\n                <h2 class=\"mb-3\">{{ service.name }}</h2>\r\n                \r\n                <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n                  <span class=\"badge bg-primary fs-5 px-3 py-2\">â‚¹{{ service.base_price }}</span>\r\n                  <div class=\"text-muted\">\r\n                    <i class=\"far fa-clock me-2\"></i>\r\n                    {{ service.time_required }} minutes\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"mb-4\">\r\n                  <h5>Description</h5>\r\n                  <p>{{ service.description }}</p>\r\n                </div>\r\n                \r\n                <div class=\"mb-4\">\r\n                  <h5>Category</h5>\r\n                  <p>{{ service.category }}</p>\r\n                </div>\r\n                \r\n                <div class=\"mb-4\">\r\n                  <h5>What's Included</h5>\r\n                  <ul class=\"included-list\">\r\n                    <li v-for=\"(item, index) in serviceIncludes\" :key=\"index\">\r\n                      <i class=\"fas fa-check text-success me-2\"></i>\r\n                      {{ item }}\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                \r\n                <div class=\"d-grid\">\r\n                  <button class=\"btn btn-primary btn-lg\" @click=\"showRequestForm = true\">\r\n                    <i class=\"fas fa-shopping-cart me-2\"></i>\r\n                    Book This Service\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- Reviews Section -->\r\n          <div class=\"card\">\r\n            <div class=\"card-header bg-white d-flex justify-content-between align-items-center\">\r\n              <h5 class=\"mb-0\">Customer Reviews</h5>\r\n              <span class=\"text-muted\">{{ reviews.length }} reviews</span>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div v-if=\"reviews.length === 0\" class=\"text-center py-4\">\r\n                <i class=\"far fa-star fa-3x text-muted mb-3\"></i>\r\n                <h5>No Reviews Yet</h5>\r\n                <p class=\"text-muted\">Be the first to review this service!</p>\r\n              </div>\r\n              \r\n              <div v-else>\r\n                <div v-for=\"(review, index) in reviews\" :key=\"index\" class=\"review-item\">\r\n                  <div class=\"d-flex align-items-center mb-2\">\r\n                    <div class=\"stars me-2\">\r\n                      <i v-for=\"n in 5\" :key=\"n\"\r\n                         class=\"fas fa-star\"\r\n                         :class=\"n <= review.rating ? 'text-warning' : 'text-muted'\"></i>\r\n                    </div>\r\n                    <strong>{{ review.customer_name }}</strong>\r\n                  </div>\r\n                  <p class=\"mb-1\">{{ review.remarks }}</p>\r\n                  <small class=\"text-muted\">{{ formatDate(review.date_created) }}</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"col-lg-4 mt-4 mt-lg-0\">\r\n          <!-- Service Request Form Card -->\r\n          <div class=\"card mb-4 sticky-top\" style=\"top: 20px\">\r\n            <div class=\"card-header bg-white\">\r\n              <h5 class=\"mb-0\">Book This Service</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <form @submit.prevent=\"submitRequest\">\r\n                <div class=\"mb-3\">\r\n                  <label for=\"requestPinCode\" class=\"form-label\">PIN Code</label>\r\n                  <input\r\n                    id=\"requestPinCode\"\r\n                    name=\"requestPinCode\"\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    v-model=\"requestForm.pin_code\"\r\n                    required\r\n                    pattern=\"[0-9]{6}\"\r\n                    placeholder=\"Enter 6-digit PIN code\"\r\n                  >\r\n                </div>\r\n                \r\n                <div class=\"mb-3\">\r\n                  <label for=\"requestInstructions\" class=\"form-label\">Special Instructions</label>\r\n                  <textarea\r\n                    id=\"requestInstructions\"\r\n                    name=\"requestInstructions\"\r\n                    class=\"form-control\"\r\n                    v-model=\"requestForm.special_instructions\"\r\n                    rows=\"3\"\r\n                    placeholder=\"Any specific requirements...\"\r\n                  ></textarea>\r\n                </div>\r\n                \r\n                <div class=\"d-grid\">\r\n                  <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"submitting\">\r\n                    <span v-if=\"submitting\" class=\"spinner-border spinner-border-sm me-2\"></span>\r\n                    Submit Request\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- Related Services Card -->\r\n          <div class=\"card\">\r\n            <div class=\"card-header bg-white\">\r\n              <h5 class=\"mb-0\">Similar Services</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div v-if=\"relatedServices.length === 0\" class=\"text-center py-3\">\r\n                <p class=\"text-muted mb-0\">No similar services found</p>\r\n              </div>\r\n              \r\n              <div v-else>\r\n                <div v-for=\"relatedService in relatedServices\" :key=\"relatedService.id\" \r\n                     class=\"related-service-item\" @click=\"navigateToService(relatedService.id)\">\r\n                  <h6>{{ relatedService.name }}</h6>\r\n                  <div class=\"d-flex justify-content-between\">\r\n                    <span class=\"badge bg-primary\">â‚¹{{ relatedService.base_price }}</span>\r\n                    <small>{{ relatedService.time_required }} minutes</small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Request Success Modal -->\r\n    <div class=\"modal fade\" :class=\"{ show: showSuccessModal }\" v-if=\"showSuccessModal\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Request Submitted</h5>\r\n            <button type=\"button\" class=\"btn-close\" @click=\"showSuccessModal = false\"></button>\r\n          </div>\r\n          <div class=\"modal-body text-center\">\r\n            <i class=\"fas fa-check-circle text-success fa-4x mb-3\"></i>\r\n            <h4>Service Request Submitted!</h4>\r\n            <p>Your request for <strong>{{ service.name }}</strong> has been submitted successfully.</p>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"goToRequests\">\r\n              View My Requests\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"showSuccessModal = false\">\r\n              Continue Browsing\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { serviceAPI, customerAPI } from '@/services/api'\r\n\r\nexport default {\r\n  name: 'ServiceDetails',\r\n  props: {\r\n    serviceId: {\r\n      type: [String, Number],\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      service: {},\r\n      reviews: [],\r\n      relatedServices: [],\r\n      loading: true,\r\n      error: null,\r\n      submitting: false,\r\n      showSuccessModal: false,\r\n      requestForm: {\r\n        service_id: null,\r\n        pin_code: '',\r\n        special_instructions: ''\r\n      },\r\n      // Sample data for what's included (could come from API)\r\n      serviceIncludes: [\r\n        'Professional service provider',\r\n        'Standard service time',\r\n        'Quality assurance',\r\n        'Customer satisfaction guarantee'\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchServiceDetails() {\r\n      try {\r\n        this.loading = true;\r\n        this.error = null;\r\n        \r\n        const service = await serviceAPI.getServiceById(this.serviceId);\r\n        this.service = service;\r\n        \r\n        // Set the service ID in the request form\r\n        this.requestForm.service_id = this.service.id;\r\n        \r\n        // In a real app, you would fetch related services and reviews here\r\n        this.fetchRelatedServices();\r\n        this.fetchReviews();\r\n        \r\n        this.loading = false;\r\n      } catch (error) {\r\n        console.error('Error fetching service details:', error);\r\n        this.error = 'Failed to load service details. Please try again.';\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    async fetchRelatedServices() {\r\n      // This would normally be an API call to get related services based on category\r\n      // For demo purposes we'll just wait and populate with sample data\r\n      setTimeout(() => {\r\n        this.relatedServices = [\r\n          {\r\n            id: 1,\r\n            name: 'Basic Plumbing',\r\n            base_price: 600,\r\n            time_required: 60\r\n          },\r\n          {\r\n            id: 2,\r\n            name: 'Advanced Plumbing',\r\n            base_price: 1200,\r\n            time_required: 120\r\n          },\r\n          {\r\n            id: 3,\r\n            name: 'Emergency Plumbing',\r\n            base_price: 1500,\r\n            time_required: 90\r\n          }\r\n        ];\r\n      }, 1000);\r\n    },\r\n    \r\n    async fetchReviews() {\r\n      // This would normally be an API call to get reviews for this service\r\n      // For demo purposes we'll just wait and populate with sample data\r\n      setTimeout(() => {\r\n        this.reviews = [\r\n          {\r\n            id: 1,\r\n            customer_name: 'John Doe',\r\n            rating: 5,\r\n            remarks: 'Excellent service! The professional was on time and did a great job.',\r\n            date_created: '2023-09-15T10:30:00Z'\r\n          },\r\n          {\r\n            id: 2,\r\n            customer_name: 'Jane Smith',\r\n            rating: 4,\r\n            remarks: 'Good service overall. Would recommend to others.',\r\n            date_created: '2023-09-10T14:45:00Z'\r\n          },\r\n          {\r\n            id: 3,\r\n            customer_name: 'Mike Johnson',\r\n            rating: 3,\r\n            remarks: 'Average service. Took longer than expected.',\r\n            date_created: '2023-09-05T09:20:00Z'\r\n          }\r\n        ];\r\n      }, 1000);\r\n    },\r\n    \r\n    async submitRequest() {\r\n      this.submitting = true;\r\n      try {\r\n        // Make sure the service_id is set\r\n        this.requestForm.service_id = this.service.id;\r\n        \r\n        // Send the request to the API\r\n        await customerAPI.createRequest(this.requestForm);\r\n        \r\n        // Reset the form\r\n        this.requestForm = {\r\n          service_id: this.service.id,\r\n          pin_code: '',\r\n          special_instructions: ''\r\n        };\r\n        \r\n        // Show success message\r\n        this.showSuccessModal = true;\r\n        \r\n      } catch (error) {\r\n        console.error('Error submitting service request:', error);\r\n        alert('Failed to submit service request: ' + (error.message || 'Unknown error'));\r\n      } finally {\r\n        this.submitting = false;\r\n      }\r\n    },\r\n    \r\n    navigateToService(serviceId) {\r\n      // Navigate to the details page for another service\r\n      this.$router.push(`/service-details/${serviceId}`);\r\n    },\r\n    \r\n    goToRequests() {\r\n      // Close the modal and navigate to requests page\r\n      this.showSuccessModal = false;\r\n      this.$router.push('/customer/dashboard');\r\n    },\r\n    \r\n    formatDate(dateString) {\r\n      if (!dateString) return '';\r\n      \r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('en-US', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric'\r\n      });\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchServiceDetails();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.service-details-page {\r\n  background-color: #f8f9fa;\r\n  min-height: 100vh;\r\n}\r\n\r\n.card {\r\n  border: none;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n  overflow: hidden;\r\n}\r\n\r\n.included-list {\r\n  list-style: none;\r\n  padding-left: 0;\r\n}\r\n\r\n.included-list li {\r\n  padding: 8px 0;\r\n}\r\n\r\n.review-item {\r\n  padding: 15px 0;\r\n  border-bottom: 1px solid #f0f0f0;\r\n}\r\n\r\n.review-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.stars i {\r\n  color: #e0e0e0;\r\n}\r\n\r\n.stars i.text-warning {\r\n  color: #ffc107;\r\n}\r\n\r\n.related-service-item {\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  background-color: #f8f9fa;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.related-service-item:hover {\r\n  background-color: #e9ecef;\r\n}\r\n\r\n.related-service-item:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.modal.show {\r\n  display: block;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n</style>\r\n"],"mappings":"AA6LA,SAAAA,UAAA,EAAAC,WAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,SAAA;MACAC,IAAA,GAAAC,MAAA,EAAAC,MAAA;MACAC,QAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,OAAA;MACAC,eAAA;MACAC,OAAA;MACAC,KAAA;MACAC,UAAA;MACAC,gBAAA;MACAC,WAAA;QACAC,UAAA;QACAC,QAAA;QACAC,oBAAA;MACA;MACA;MACAC,eAAA,GACA,iCACA,yBACA,qBACA;IAEA;EACA;EACAC,OAAA;IACA,MAAAC,oBAAA;MACA;QACA,KAAAV,OAAA;QACA,KAAAC,KAAA;QAEA,MAAAJ,OAAA,SAAAV,UAAA,CAAAwB,cAAA,MAAApB,SAAA;QACA,KAAAM,OAAA,GAAAA,OAAA;;QAEA;QACA,KAAAO,WAAA,CAAAC,UAAA,QAAAR,OAAA,CAAAe,EAAA;;QAEA;QACA,KAAAC,oBAAA;QACA,KAAAC,YAAA;QAEA,KAAAd,OAAA;MACA,SAAAC,KAAA;QACAc,OAAA,CAAAd,KAAA,oCAAAA,KAAA;QACA,KAAAA,KAAA;QACA,KAAAD,OAAA;MACA;IACA;IAEA,MAAAa,qBAAA;MACA;MACA;MACAG,UAAA;QACA,KAAAjB,eAAA,IACA;UACAa,EAAA;UACAvB,IAAA;UACA4B,UAAA;UACAC,aAAA;QACA,GACA;UACAN,EAAA;UACAvB,IAAA;UACA4B,UAAA;UACAC,aAAA;QACA,GACA;UACAN,EAAA;UACAvB,IAAA;UACA4B,UAAA;UACAC,aAAA;QACA,EACA;MACA;IACA;IAEA,MAAAJ,aAAA;MACA;MACA;MACAE,UAAA;QACA,KAAAlB,OAAA,IACA;UACAc,EAAA;UACAO,aAAA;UACAC,MAAA;UACAC,OAAA;UACAC,YAAA;QACA,GACA;UACAV,EAAA;UACAO,aAAA;UACAC,MAAA;UACAC,OAAA;UACAC,YAAA;QACA,GACA;UACAV,EAAA;UACAO,aAAA;UACAC,MAAA;UACAC,OAAA;UACAC,YAAA;QACA,EACA;MACA;IACA;IAEA,MAAAC,cAAA;MACA,KAAArB,UAAA;MACA;QACA;QACA,KAAAE,WAAA,CAAAC,UAAA,QAAAR,OAAA,CAAAe,EAAA;;QAEA;QACA,MAAAxB,WAAA,CAAAoC,aAAA,MAAApB,WAAA;;QAEA;QACA,KAAAA,WAAA;UACAC,UAAA,OAAAR,OAAA,CAAAe,EAAA;UACAN,QAAA;UACAC,oBAAA;QACA;;QAEA;QACA,KAAAJ,gBAAA;MAEA,SAAAF,KAAA;QACAc,OAAA,CAAAd,KAAA,sCAAAA,KAAA;QACAwB,KAAA,yCAAAxB,KAAA,CAAAyB,OAAA;MACA;QACA,KAAAxB,UAAA;MACA;IACA;IAEAyB,kBAAApC,SAAA;MACA;MACA,KAAAqC,OAAA,CAAAC,IAAA,qBAAAtC,SAAA;IACA;IAEAuC,aAAA;MACA;MACA,KAAA3B,gBAAA;MACA,KAAAyB,OAAA,CAAAC,IAAA;IACA;IAEAE,WAAAC,UAAA;MACA,KAAAA,UAAA;MAEA,MAAAC,IAAA,OAAAC,IAAA,CAAAF,UAAA;MACA,OAAAC,IAAA,CAAAE,kBAAA;QACAC,IAAA;QACAC,KAAA;QACAC,GAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAA7B,mBAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}