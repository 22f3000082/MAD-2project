{"ast":null,"code":"import { authService } from '@/services/api';\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      formData: {\n        email: '',\n        password: ''\n      },\n      loading: false,\n      error: null,\n      errors: {},\n      loginError: '',\n      isLoading: false,\n      showPassword: false\n    };\n  },\n  methods: {\n    togglePassword() {\n      this.showPassword = !this.showPassword;\n    },\n    validateForm() {\n      this.errors = {};\n      let isValid = true;\n      if (!this.formData.email) {\n        this.errors.email = 'Email is required';\n        isValid = false;\n      } else if (!/\\S+@\\S+\\.\\S+/.test(this.formData.email)) {\n        this.errors.email = 'Please enter a valid email address';\n        isValid = false;\n      }\n      if (!this.formData.password) {\n        this.errors.password = 'Password is required';\n        isValid = false;\n      }\n      return isValid;\n    },\n    async handleSubmit() {\n      try {\n        this.loading = true;\n        this.error = null;\n\n        // Form validation\n        if (!this.formData.email || !this.formData.password) {\n          this.error = 'Email and password are required';\n          return;\n        }\n\n        // Create a plain JavaScript object (not a Vue reactive object)\n        const credentials = {\n          email: this.formData.email,\n          password: this.formData.password\n        };\n\n        // Log credentials format but not the actual values\n        console.log('Submitting credentials with format:', {\n          email: 'type: ' + typeof credentials.email,\n          password: 'type: ' + typeof credentials.password\n        });\n        await authService.login(credentials);\n\n        // If we got here without errors, clear the form\n        this.formData.email = '';\n        this.formData.password = '';\n      } catch (err) {\n        // Better error handling\n        console.error('Login submission error:', err);\n        this.error = err.message || 'Login failed. Please check your credentials and try again.';\n      } finally {\n        this.loading = false;\n      }\n    }\n  },\n  created() {\n    // Clear any existing auth data on component mount\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }\n};","map":{"version":3,"names":["authService","name","data","formData","email","password","loading","error","errors","loginError","isLoading","showPassword","methods","togglePassword","validateForm","isValid","test","handleSubmit","credentials","console","log","login","err","message","created","localStorage","removeItem"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"container py-5\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-6 col-lg-5\">\r\n          <div class=\"card shadow\">\r\n            <div class=\"card-body p-4\">\r\n              <h2 class=\"text-center mb-4\">Login</h2>\r\n\r\n              <!-- Login Form -->\r\n              <form @submit.prevent=\"handleSubmit\" class=\"needs-validation\" novalidate>\r\n                <!-- Email Field -->\r\n                <div class=\"mb-3\">\r\n                  <label class=\"form-label\">Email</label>\r\n                  <div class=\"input-group\">\r\n                    <span class=\"input-group-text\">\r\n                      <i class=\"fas fa-envelope\"></i>\r\n                    </span>\r\n                    <input\r\n                      type=\"email\"\r\n                      class=\"form-control\"\r\n                      v-model=\"formData.email\"\r\n                      required\r\n                      :class=\"{ 'is-invalid': errors.email }\"\r\n                      placeholder=\"Enter your email\"\r\n                      autocomplete=\"email\"\r\n                    >\r\n                    <div class=\"invalid-feedback\">{{ errors.email }}</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Password Field -->\r\n                <div class=\"mb-4\">\r\n                  <label class=\"form-label\">Password</label>\r\n                  <div class=\"input-group\">\r\n                    <span class=\"input-group-text\">\r\n                      <i class=\"fas fa-lock\"></i>\r\n                    </span>\r\n                    <input\r\n                      :type=\"showPassword ? 'text' : 'password'\"\r\n                      class=\"form-control\"\r\n                      v-model=\"formData.password\"\r\n                      required\r\n                      :class=\"{ 'is-invalid': errors.password }\"\r\n                      placeholder=\"Enter your password\"\r\n                      autocomplete=\"current-password\"\r\n                    >\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-outline-secondary\"\r\n                      @click=\"togglePassword\"\r\n                    >\r\n                      <i :class=\"showPassword ? 'fas fa-eye-slash' : 'fas fa-eye'\"></i>\r\n                    </button>\r\n                    <div class=\"invalid-feedback\">{{ errors.password }}</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Error Alert -->\r\n                <div v-if=\"loginError\" class=\"alert alert-danger\" role=\"alert\">\r\n                  <i class=\"fas fa-exclamation-circle me-2\"></i>\r\n                  {{ loginError }}\r\n                </div>\r\n\r\n                <!-- Submit Button -->\r\n                <div class=\"d-grid gap-2\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary\"\r\n                    :disabled=\"isLoading\"\r\n                  >\r\n                    <span v-if=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\"></span>\r\n                    {{ isLoading ? 'Logging in...' : 'Login' }}\r\n                  </button>\r\n                </div>\r\n\r\n                <!-- Register Link -->\r\n                <p class=\"text-center mt-3\">\r\n                  Don't have an account?\r\n                  <router-link to=\"/register\">Register here</router-link>\r\n                </p>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Role Information Cards -->\r\n          <div class=\"row mt-4 g-3\">\r\n            <!-- <div class=\"col-md-4\">\r\n              <div class=\"card h-100 border-0 shadow-sm\">\r\n                <div class=\"card-body text-center\">\r\n                  <i class=\"fas fa-user-shield fa-2x text-primary mb-2\"></i>\r\n                  <h5 class=\"card-title\">Admin</h5>\r\n                  <p class=\"card-text small\">Manage services and users</p>\r\n                </div>\r\n              </div>\r\n            </div> -->\r\n            <div class=\"col-md-4\">\r\n              <div class=\"card h-100 border-0 shadow-sm\">\r\n                <div class=\"card-body text-center\">\r\n                  <i class=\"fas fa-user fa-2x text-success mb-2\"></i>\r\n                  <h5 class=\"card-title\">Customer</h5>\r\n                  <p class=\"card-text small\">Book and manage services</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n              <div class=\"card h-100 border-0 shadow-sm\">\r\n                <div class=\"card-body text-center\">\r\n                  <i class=\"fas fa-user-tie fa-2x text-info mb-2\"></i>\r\n                  <h5 class=\"card-title\">Professional</h5>\r\n                  <p class=\"card-text small\">Provide services</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { authService } from '@/services/api'\r\n\r\nexport default {\r\n  name: 'LoginView',\r\n  data() {\r\n    return {\r\n      formData: {\r\n        email: '',\r\n        password: ''\r\n      },\r\n      loading: false,\r\n      error: null,\r\n      errors: {},\r\n      loginError: '',\r\n      isLoading: false,\r\n      showPassword: false\r\n    }\r\n  },\r\n  methods: {\r\n    togglePassword() {\r\n      this.showPassword = !this.showPassword\r\n    },\r\n    validateForm() {\r\n      this.errors = {}\r\n      let isValid = true\r\n\r\n      if (!this.formData.email) {\r\n        this.errors.email = 'Email is required'\r\n        isValid = false\r\n      } else if (!/\\S+@\\S+\\.\\S+/.test(this.formData.email)) {\r\n        this.errors.email = 'Please enter a valid email address'\r\n        isValid = false\r\n      }\r\n\r\n      if (!this.formData.password) {\r\n        this.errors.password = 'Password is required'\r\n        isValid = false\r\n      }\r\n\r\n      return isValid\r\n    },\r\n    async handleSubmit() {\r\n      try {\r\n        this.loading = true;\r\n        this.error = null;\r\n        \r\n        // Form validation\r\n        if (!this.formData.email || !this.formData.password) {\r\n          this.error = 'Email and password are required';\r\n          return;\r\n        }\r\n        \r\n        // Create a plain JavaScript object (not a Vue reactive object)\r\n        const credentials = {\r\n          email: this.formData.email,\r\n          password: this.formData.password\r\n        };\r\n        \r\n        // Log credentials format but not the actual values\r\n        console.log('Submitting credentials with format:', \r\n                    { email: 'type: ' + typeof credentials.email, \r\n                      password: 'type: ' + typeof credentials.password });\r\n                      \r\n        await authService.login(credentials);\r\n        \r\n        // If we got here without errors, clear the form\r\n        this.formData.email = '';\r\n        this.formData.password = '';\r\n      } catch (err) {\r\n        // Better error handling\r\n        console.error('Login submission error:', err);\r\n        this.error = err.message || 'Login failed. Please check your credentials and try again.';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    // Clear any existing auth data on component mount\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('user')\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  min-height: 100vh;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.card {\r\n  border: none;\r\n  border-radius: 15px;\r\n}\r\n\r\n.form-control:focus,\r\n.form-select:focus {\r\n  border-color: #80bdff;\r\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n.btn-primary {\r\n  padding: 0.75rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.input-group-text {\r\n  background-color: #f8f9fa;\r\n  border-right: none;\r\n}\r\n\r\n.input-group .form-control {\r\n  border-left: none;\r\n}\r\n\r\n.input-group .form-control:focus {\r\n  border-left: 1px solid #80bdff;\r\n}\r\n\r\n.input-group .btn-outline-secondary {\r\n  border-color: #ced4da;\r\n}\r\n\r\n.input-group .btn-outline-secondary:hover {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.invalid-feedback {\r\n  font-size: 0.875rem;\r\n}\r\n\r\n/* Role cards styling */\r\n.card-body i {\r\n  opacity: 0.8;\r\n}\r\n\r\n.card-text {\r\n  color: #6c757d;\r\n}\r\n\r\n/* Transition effects */\r\n.alert {\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .col-md-4 {\r\n    margin-bottom: 1rem;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AA0HA,SAAAA,WAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,KAAA;QACAC,QAAA;MACA;MACAC,OAAA;MACAC,KAAA;MACAC,MAAA;MACAC,UAAA;MACAC,SAAA;MACAC,YAAA;IACA;EACA;EACAC,OAAA;IACAC,eAAA;MACA,KAAAF,YAAA,SAAAA,YAAA;IACA;IACAG,aAAA;MACA,KAAAN,MAAA;MACA,IAAAO,OAAA;MAEA,UAAAZ,QAAA,CAAAC,KAAA;QACA,KAAAI,MAAA,CAAAJ,KAAA;QACAW,OAAA;MACA,2BAAAC,IAAA,MAAAb,QAAA,CAAAC,KAAA;QACA,KAAAI,MAAA,CAAAJ,KAAA;QACAW,OAAA;MACA;MAEA,UAAAZ,QAAA,CAAAE,QAAA;QACA,KAAAG,MAAA,CAAAH,QAAA;QACAU,OAAA;MACA;MAEA,OAAAA,OAAA;IACA;IACA,MAAAE,aAAA;MACA;QACA,KAAAX,OAAA;QACA,KAAAC,KAAA;;QAEA;QACA,UAAAJ,QAAA,CAAAC,KAAA,UAAAD,QAAA,CAAAE,QAAA;UACA,KAAAE,KAAA;UACA;QACA;;QAEA;QACA,MAAAW,WAAA;UACAd,KAAA,OAAAD,QAAA,CAAAC,KAAA;UACAC,QAAA,OAAAF,QAAA,CAAAE;QACA;;QAEA;QACAc,OAAA,CAAAC,GAAA,wCACA;UAAAhB,KAAA,oBAAAc,WAAA,CAAAd,KAAA;UACAC,QAAA,oBAAAa,WAAA,CAAAb;QAAA;QAEA,MAAAL,WAAA,CAAAqB,KAAA,CAAAH,WAAA;;QAEA;QACA,KAAAf,QAAA,CAAAC,KAAA;QACA,KAAAD,QAAA,CAAAE,QAAA;MACA,SAAAiB,GAAA;QACA;QACAH,OAAA,CAAAZ,KAAA,4BAAAe,GAAA;QACA,KAAAf,KAAA,GAAAe,GAAA,CAAAC,OAAA;MACA;QACA,KAAAjB,OAAA;MACA;IACA;EACA;EACAkB,QAAA;IACA;IACAC,YAAA,CAAAC,UAAA;IACAD,YAAA,CAAAC,UAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}