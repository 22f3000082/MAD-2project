{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('div', {\n    staticClass: \"register-container\"\n  }, [_c('div', {\n    staticClass: \"container py-5\"\n  }, [_c('div', {\n    staticClass: \"row justify-content-center\"\n  }, [_c('div', {\n    staticClass: \"col-md-8 col-lg-6\"\n  }, [_c('div', {\n    staticClass: \"card shadow\"\n  }, [_c('div', {\n    staticClass: \"card-body p-4\"\n  }, [_c('h2', {\n    staticClass: \"text-center mb-4\"\n  }, [_vm._v(\"Register\")]), _vm.error ? _c('div', {\n    staticClass: \"alert alert-danger\"\n  }, [_vm._v(_vm._s(_vm.error))]) : _vm._e(), _c('form', {\n    staticClass: \"needs-validation\",\n    attrs: {\n      \"novalidate\": \"\"\n    },\n    on: {\n      \"submit\": function ($event) {\n        $event.preventDefault();\n        return _vm.handleSubmit.apply(null, arguments);\n      }\n    }\n  }, [_c('div', {\n    staticClass: \"mb-3\"\n  }, [_c('label', {\n    staticClass: \"form-label\"\n  }, [_vm._v(\"Full Name\")]), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.formData.name,\n      expression: \"formData.name\"\n    }],\n    staticClass: \"form-control\",\n    class: {\n      'is-invalid': _vm.errors.name\n    },\n    attrs: {\n      \"type\": \"text\",\n      \"required\": \"\"\n    },\n    domProps: {\n      \"value\": _vm.formData.name\n    },\n    on: {\n      \"input\": function ($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.formData, \"name\", $event.target.value);\n      }\n    }\n  }), _c('div', {\n    staticClass: \"invalid-feedback\"\n  }, [_vm._v(_vm._s(_vm.errors.name))])]), _c('div', {\n    staticClass: \"mb-3\"\n  }, [_c('label', {\n    staticClass: \"form-label\"\n  }, [_vm._v(\"Username\")]), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.formData.username,\n      expression: \"formData.username\"\n    }],\n    staticClass: \"form-control\",\n    class: {\n      'is-invalid': _vm.errors.username\n    },\n    attrs: {\n      \"type\": \"text\",\n      \"required\": \"\"\n    },\n    domProps: {\n      \"value\": _vm.formData.username\n    },\n    on: {\n      \"input\": function ($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.formData, \"username\", $event.target.value);\n      }\n    }\n  }), _c('div', {\n    staticClass: \"invalid-feedback\"\n  }, [_vm._v(_vm._s(_vm.errors.username))])]), _c('div', {\n    staticClass: \"mb-3\"\n  }, [_c('label', {\n    staticClass: \"form-label\"\n  }, [_vm._v(\"Email\")]), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.formData.email,\n      expression: \"formData.email\"\n    }],\n    staticClass: \"form-control\",\n    class: {\n      'is-invalid': _vm.errors.email\n    },\n    attrs: {\n      \"type\": \"email\",\n      \"required\": \"\"\n    },\n    domProps: {\n      \"value\": _vm.formData.email\n    },\n    on: {\n      \"input\": function ($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.formData, \"email\", $event.target.value);\n      }\n    }\n  }), _c('div', {\n    staticClass: \"invalid-feedback\"\n  }, [_vm._v(_vm._s(_vm.errors.email))])]), _c('div', {\n    staticClass: \"mb-3\"\n  }, [_c('label', {\n    staticClass: \"form-label\"\n  }, [_vm._v(\"Password\")]), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.formData.password,\n      expression: \"formData.password\"\n    }],\n    staticClass: \"form-control\",\n    class: {\n      'is-invalid': _vm.errors.password\n    },\n    attrs: {\n      \"type\": \"password\",\n      \"required\": \"\"\n    },\n    domProps: {\n      \"value\": _vm.formData.password\n    },\n    on: {\n      \"input\": function ($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.formData, \"password\", $event.target.value);\n      }\n    }\n  }), _c('div', {\n    staticClass: \"invalid-feedback\"\n  }, [_vm._v(_vm._s(_vm.errors.password))])]), _c('div', {\n    staticClass: \"mb-4\"\n  }, [_c('label', {\n    staticClass: \"form-label\"\n  }, [_vm._v(\"Register as:\")]), _c('div', {\n    staticClass: \"d-flex gap-4\"\n  }, [_c('div', {\n    staticClass: \"form-check\"\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.formData.role,\n      expression: \"formData.role\"\n    }],\n    staticClass: \"form-check-input\",\n    attrs: {\n      \"type\": \"radio\",\n      \"value\": \"customer\",\n      \"id\": \"roleCustomer\"\n    },\n    domProps: {\n      \"checked\": _vm._q(_vm.formData.role, \"customer\")\n    },\n    on: {\n      \"change\": function ($event) {\n        return _vm.$set(_vm.formData, \"role\", \"customer\");\n      }\n    }\n  }), _c('label', {\n    staticClass: \"form-check-label\",\n    attrs: {\n      \"for\": \"roleCustomer\"\n    }\n  }, [_vm._v(\"Customer\")])]), _c('div', {\n    staticClass: \"form-check\"\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.formData.role,\n      expression: \"formData.role\"\n    }],\n    staticClass: \"form-check-input\",\n    attrs: {\n      \"type\": \"radio\",\n      \"value\": \"professional\",\n      \"id\": \"roleProfessional\"\n    },\n    domProps: {\n      \"checked\": _vm._q(_vm.formData.role, \"professional\")\n    },\n    on: {\n      \"change\": function ($event) {\n        return _vm.$set(_vm.formData, \"role\", \"professional\");\n      }\n    }\n  }), _c('label', {\n    staticClass: \"form-check-label\",\n    attrs: {\n      \"for\": \"roleProfessional\"\n    }\n  }, [_vm._v(\"Service Professional\")])])])]), _vm.formData.role === 'professional' ? _c('div', [_c('div', {\n    staticClass: \"mb-3\"\n  }, [_c('label', {\n    staticClass: \"form-label\"\n  }, [_vm._v(\"Service Type\")]), _c('select', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.formData.service_type,\n      expression: \"formData.service_type\"\n    }],\n    staticClass: \"form-select\",\n    attrs: {\n      \"required\": \"\"\n    },\n    on: {\n      \"change\": function ($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function (o) {\n          return o.selected;\n        }).map(function (o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val;\n        });\n        _vm.$set(_vm.formData, \"service_type\", $event.target.multiple ? $$selectedVal : $$selectedVal[0]);\n      }\n    }\n  }, [_c('option', {\n    attrs: {\n      \"value\": \"\"\n    }\n  }, [_vm._v(\"Select a service type\")]), _vm._l(_vm.services, function (service) {\n    return _c('option', {\n      key: service,\n      domProps: {\n        \"value\": service\n      }\n    }, [_vm._v(_vm._s(service))]);\n  })], 2)]), _c('div', {\n    staticClass: \"mb-3\"\n  }, [_c('label', {\n    staticClass: \"form-label\"\n  }, [_vm._v(\"Experience (years)\")]), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.formData.experience,\n      expression: \"formData.experience\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"number\",\n      \"min\": \"0\",\n      \"required\": \"\"\n    },\n    domProps: {\n      \"value\": _vm.formData.experience\n    },\n    on: {\n      \"input\": function ($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.formData, \"experience\", $event.target.value);\n      }\n    }\n  })]), _c('div', {\n    staticClass: \"mb-3\"\n  }, [_c('label', {\n    staticClass: \"form-label\"\n  }, [_vm._v(\"Description\")]), _c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.formData.description,\n      expression: \"formData.description\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"rows\": \"3\"\n    },\n    domProps: {\n      \"value\": _vm.formData.description\n    },\n    on: {\n      \"input\": function ($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.formData, \"description\", $event.target.value);\n      }\n    }\n  })]), _c('div', {\n    staticClass: \"mb-3\"\n  }, [_c('label', {\n    staticClass: \"form-label\"\n  }, [_vm._v(\"Upload Documents\")]), _c('input', {\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"file\",\n      \"multiple\": \"\"\n    },\n    on: {\n      \"change\": _vm.handleFileUpload\n    }\n  })])]) : _vm._e(), _vm.formData.role === 'customer' ? _c('div', [_c('div', {\n    staticClass: \"mb-3\"\n  }, [_c('label', {\n    staticClass: \"form-label\"\n  }, [_vm._v(\"Phone\")]), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.formData.phone,\n      expression: \"formData.phone\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"tel\",\n      \"required\": \"\"\n    },\n    domProps: {\n      \"value\": _vm.formData.phone\n    },\n    on: {\n      \"input\": function ($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.formData, \"phone\", $event.target.value);\n      }\n    }\n  })]), _c('div', {\n    staticClass: \"mb-3\"\n  }, [_c('label', {\n    staticClass: \"form-label\"\n  }, [_vm._v(\"Address\")]), _c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.formData.address,\n      expression: \"formData.address\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"required\": \"\"\n    },\n    domProps: {\n      \"value\": _vm.formData.address\n    },\n    on: {\n      \"input\": function ($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.formData, \"address\", $event.target.value);\n      }\n    }\n  })]), _c('div', {\n    staticClass: \"mb-3\"\n  }, [_c('label', {\n    staticClass: \"form-label\"\n  }, [_vm._v(\"PIN Code\")]), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.formData.pin_code,\n      expression: \"formData.pin_code\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"required\": \"\",\n      \"pattern\": \"[0-9]{6}\"\n    },\n    domProps: {\n      \"value\": _vm.formData.pin_code\n    },\n    on: {\n      \"input\": function ($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.formData, \"pin_code\", $event.target.value);\n      }\n    }\n  })])]) : _vm._e(), _c('div', {\n    staticClass: \"d-grid gap-2\"\n  }, [_c('button', {\n    staticClass: \"btn btn-primary\",\n    attrs: {\n      \"type\": \"submit\",\n      \"disabled\": _vm.loading\n    }\n  }, [_vm._v(_vm._s(_vm.loading ? 'Registering...' : 'Register'))])]), _c('p', {\n    staticClass: \"text-center mt-3\"\n  }, [_vm._v(\" Already have an account? \"), _c('router-link', {\n    attrs: {\n      \"to\": \"/login\"\n    }\n  }, [_vm._v(\"Login here\")])], 1)])])])])])])]);\n};\nvar staticRenderFns = [];\nexport { render, staticRenderFns };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}